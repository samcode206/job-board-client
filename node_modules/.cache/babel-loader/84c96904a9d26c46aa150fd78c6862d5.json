{"ast":null,"code":"var _jsxFileName = \"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/Skills.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport EmptyWarn from './sub/EmptyWarn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Skills({\n  skills,\n  updateResume\n}) {\n  _s();\n\n  const [userSkills, setUserSkills] = skills;\n  const [skillInput, setSkillInput] = useState(\"\");\n  const [addMode, setAddMode] = useState(false);\n\n  const removeSkill = skill => {\n    const newUserSkills = [...userSkills].filter(s => s !== skill);\n    setUserSkills(newUserSkills);\n  };\n\n  const renderSkills = () => {\n    return userSkills.map(skill => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\" \", skill, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        id: skill,\n        onClick: e => {\n          removeSkill(e.target.id);\n        },\n        className: \"far fa-trash-alt is-clickable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 67\n      }, this)]\n    }, skill, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 42\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: userSkills.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: renderSkills()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyWarn, {\n        children: \"Your Skills Section is empty please fill it up to improve your resume!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), addMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label mt-3\",\n        children: \"Add Skill:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field has-addons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control is-expanded\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            placeholder: \"Add Skill\",\n            value: skillInput,\n            onChange: e => setSkillInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => {\n              if (skillInput.length > 1 && !userSkills.includes(skillInput)) {\n                const newUserSkills = [...userSkills];\n                newUserSkills.push(skillInput);\n                setUserSkills(newUserSkills);\n                setSkillInput(\"\");\n              }\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field is-grouped is-grouped-centered\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-link\",\n          onClick: updateResume,\n          children: \"Save Skills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            setAddMode(!addMode);\n            setSkillInput(\"\");\n          },\n          children: [\" \", addMode ? \"Cancel Changes\" : \"Edit Skills\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Skills, \"Y75U6KwsWHxmcJHEXg/XyFhR0co=\");\n\n_c = Skills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"sources":["/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/Skills.js"],"names":["React","useState","EmptyWarn","Skills","skills","updateResume","userSkills","setUserSkills","skillInput","setSkillInput","addMode","setAddMode","removeSkill","skill","newUserSkills","filter","s","renderSkills","map","e","target","id","length","value","includes","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport EmptyWarn from './sub/EmptyWarn';\n\nexport default function Skills({skills, updateResume}){\n    const [userSkills, setUserSkills] = skills; \n    const [skillInput, setSkillInput] = useState(\"\");\n    const [addMode, setAddMode] = useState(false); \n\n    const removeSkill = (skill) =>{\n        const newUserSkills = [...userSkills].filter((s) => s !== skill); \n        setUserSkills(newUserSkills);\n    };\n\n    const renderSkills = () =>{\n        return userSkills.map((skill) => <li key={skill}> {skill} <i id={skill} onClick={(e)=>{removeSkill(e.target.id)}} className=\"far fa-trash-alt is-clickable\"></i></li>)\n    }\n    return <div className=\"container\">\n            <div>\n                {\n                    userSkills.length ? \n                    <div className=\"content\">\n                        <ul>\n                            {renderSkills()}\n                        </ul>\n                    </div>\n                     : <EmptyWarn>Your Skills Section is empty please fill it up to improve your resume!</EmptyWarn>\n                }\n            </div>\n\n            {  addMode ?\n                <>\n                <label className=\"label mt-3\">Add Skill:</label>\n                <div className=\"field has-addons\">\n                \n                <div className=\"control is-expanded\">\n                    <input className=\"input\" placeholder=\"Add Skill\" value={skillInput} onChange={(e)=> setSkillInput(e.target.value)}/>\n                </div>\n                <div className=\"control\">\n                    <button className=\"button\" onClick={()=>{\n                        if (skillInput.length > 1 && !userSkills.includes(skillInput)){\n                            const newUserSkills = [...userSkills];\n                            newUserSkills.push(skillInput);\n                            setUserSkills(newUserSkills);\n                            setSkillInput(\"\");\n                        }\n                    }}>\n                        Add\n                     </button>\n                    </div>\n                </div>\n            </> : null\n            }\n\n            <hr />\n            <div className=\"field is-grouped is-grouped-centered\">\n                <div className=\"control\">\n                    <button className=\"button is-link\" onClick={updateResume}>Save Skills</button>\n                </div>\n                <div className=\"control\">\n                    <button className=\"button\" onClick={()=> {setAddMode(!addMode);setSkillInput(\"\")}}> {addMode ? \"Cancel Changes\" : \"Edit Skills\" }</button>\n                </div>\n            </div>\n       </div>\n    \n}"]},"metadata":{},"sourceType":"module"}