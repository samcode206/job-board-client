{"ast":null,"code":"var _jsxFileName = \"/Users/sameem/Desktop/job-board-client/src/Nav/subcomponents/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Modal from '../../General/Modal';\nimport AuthFieldContainer from './AuthStyle';\nimport { validate } from 'email-validator';\nimport baseURL from '../../Server';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  showLogin,\n  closeModal,\n  updateUser\n}) {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [invalidCreds, setInvalidCreds] = useState(false);\n  const [serverError, setServerError] = useState(false);\n  useEffect(() => {\n    if (showLogin === false) {\n      setEmail(\"\");\n      setPassword(\"\");\n      setInvalidCreds(false);\n      setServerError(false);\n    }\n  }, [showLogin]);\n\n  const onSubmitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      if (validateFields() === true) {\n        const res = await baseURL.post(\"/entry/login\", {\n          email,\n          password\n        });\n\n        if (res.status === 200) {\n          updateUser(\"in\", {\n            user: res.data.email,\n            token: res.data.token,\n            userId: res.data.userId,\n            userDetails: {\n              appliedJobs: res.data.appliedJobs,\n              resume: res.data.resume\n            }\n          });\n          setEmail(\"\");\n          setPassword(\"\");\n          setServerError(false);\n          setInvalidCreds(false);\n          closeModal();\n        }\n      }\n    } catch (err) {\n      if (err.response.status === 401) {\n        setInvalidCreds(true);\n      } else {\n        setServerError(true);\n      }\n    }\n  };\n\n  const validateFields = () => {\n    if (validate(email) && password.length) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const cancelHandler = e => {\n    e.preventDefault();\n    setPassword(\"\");\n    setEmail(\"\");\n    closeModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    modalClassName: showLogin ? \"modal is-active\" : \"modal\",\n    closeModal: closeModal,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title is-4 has-text-centered\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form-login\",\n      style: AuthFieldContainer,\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Email\",\n          onChange: e => {\n            setEmail(e.target.value);\n          },\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => {\n            setPassword(e.target.value);\n          },\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field is-grouped is-grouped-centered\",\n        children: [validateFields() ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-link is-rounded is-outlined\",\n            onClick: onSubmitHandler,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-link is-rounded is-outlined\",\n            disabled: true,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-danger is-outlined is-rounded\",\n            onClick: e => {\n              cancelHandler(e);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), serverError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Something went wrong please try again later!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }, this), invalidCreds && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Invalid Credentials!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Login, \"SVQ1oqj1HQcZANDfxjkgeLSMm2w=\");\n\n_c = Login;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/sameem/Desktop/job-board-client/src/Nav/subcomponents/Login.js"],"names":["React","useEffect","useState","Modal","AuthFieldContainer","validate","baseURL","Login","showLogin","closeModal","updateUser","email","setEmail","password","setPassword","invalidCreds","setInvalidCreds","serverError","setServerError","onSubmitHandler","e","preventDefault","validateFields","res","post","status","user","data","token","userId","userDetails","appliedJobs","resume","err","response","length","cancelHandler","target","value","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Modal from '../../General/Modal';\nimport AuthFieldContainer from './AuthStyle';\nimport {validate} from 'email-validator'; \nimport baseURL from '../../Server';\n\nexport default function Login({showLogin, closeModal, updateUser}){\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [invalidCreds, setInvalidCreds] = useState(false);\n    const [serverError, setServerError] = useState(false); \n\n    useEffect(()=>{\n        if (showLogin === false){\n            setEmail(\"\");\n            setPassword(\"\");\n            setInvalidCreds(false);\n            setServerError(false); \n        }\n    }, [showLogin])\n\n    const onSubmitHandler = async (e) => {\n        e.preventDefault(); \n        try {\n            if (validateFields() === true){\n                const res = await baseURL.post(\"/entry/login\", {email, password}); \n                if (res.status === 200){\n                    updateUser(\"in\", \n                    {\n                        user: res.data.email,\n                        token: res.data.token,\n                        userId: res.data.userId,\n                        userDetails: {appliedJobs: res.data.appliedJobs, resume: res.data.resume}\n                    });\n                    setEmail(\"\"); setPassword(\"\"); setServerError(false); setInvalidCreds(false); \n                    closeModal(); \n                }\n            } \n        } catch (err){\n            if (err.response.status === 401){\n                setInvalidCreds(true);\n            } else {\n                setServerError(true); \n            }\n        }\n       \n    }\n\n    const validateFields = () => {\n        if (validate(email) && password.length){\n            return true;\n        } else {\n            return false; \n        }\n    }; \n\n    const cancelHandler = (e) => {\n        e.preventDefault();\n        setPassword(\"\");\n        setEmail(\"\");\n        closeModal();\n    }; \n\n    return <Modal modalClassName={showLogin ? \"modal is-active\" : \"modal\"} closeModal={closeModal}>\n        <h1 className=\"title is-4 has-text-centered\">Login</h1>\n        <form id=\"form-login\" style={AuthFieldContainer} onSubmit={onSubmitHandler}>\n        <label className=\"label\">\n            Email\n            <input className=\"input\" type=\"text\" placeholder=\"Email\" \n            onChange={(e)=>{setEmail(e.target.value)}} value={email}/>\n        </label>\n        <label className=\"label\">\n            Password\n        <input className=\"input\" type=\"password\" placeholder=\"Password\"\n         onChange={(e)=>{setPassword(e.target.value)}} value={password}/>\n        </label>\n\n        <div className=\"field is-grouped is-grouped-centered\">\n                {\n                  validateFields() ? <div className=\"control\">\n                   <button className=\"button is-link is-rounded is-outlined\" onClick={onSubmitHandler}>Submit</button>\n                   </div>:\n                   <div className=\"control\">\n                   <button className=\"button is-link is-rounded is-outlined\" disabled>Submit</button>\n                   </div> \n                }\n\n                <div className=\"control\">\n                <button className=\"button is-danger is-outlined is-rounded\"\n                 onClick={(e)=>{cancelHandler(e)}}>Cancel</button>\n                </div>\n\n            </div>\n            {serverError && <p style={{color:\"red\"}}>Something went wrong please try again later!</p>}\n           {invalidCreds && <p style={{color:\"red\"}}>Invalid Credentials!</p>}\n        </form>\n    </Modal>\n}; "]},"metadata":{},"sourceType":"module"}