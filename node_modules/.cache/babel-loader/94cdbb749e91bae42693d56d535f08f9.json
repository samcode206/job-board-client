{"ast":null,"code":"var _jsxFileName = \"/Users/sameem/Desktop/job-board-client/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Nav from './Nav/Nav';\nimport Home from './Home/Home';\nimport Jobs from './components/Jobs/Jobs';\nimport Account from './components/Account/Account';\nimport \"./assets/app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"\",\n      token: \"\"\n    };\n    this.updateUser = this.updateUser.bind(this);\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem(\"token\");\n    let user = localStorage.getItem(\"user\");\n\n    if (token && user && token.length && user.length) {\n      this.setState({\n        user,\n        token\n      });\n    }\n\n    ;\n  }\n\n  updateUser(action, login = {\n    user: \"\",\n    token: \"\",\n    userId: \"\",\n    userDetails: {}\n  }) {\n    switch (action) {\n      case \"out\":\n        this.setState({\n          user: \"\",\n          token: \"\"\n        });\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"userId\");\n        localStorage.removeItem(\"userDetails\");\n        break;\n\n      default:\n        const {\n          user,\n          token,\n          userId,\n          userDetails\n        } = login;\n        this.setState({\n          user,\n          token\n        });\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"user\", user);\n        localStorage.setItem(\"userId\", userId);\n        localStorage.setItem(\"userDetails\", JSON.stringify(userDetails));\n        break;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        user: this.state.user,\n        updateUser: this.updateUser,\n        token: this.state.token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/jobs\",\n          children: /*#__PURE__*/_jsxDEV(Jobs, {\n            user: this.state.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/account\",\n          children: /*#__PURE__*/_jsxDEV(Account, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/sameem/Desktop/job-board-client/src/App.js"],"names":["React","BrowserRouter","Switch","Route","Nav","Home","Jobs","Account","App","Component","constructor","props","state","user","token","updateUser","bind","componentDidMount","localStorage","getItem","length","setState","action","login","userId","userDetails","removeItem","setItem","JSON","stringify","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BrowserRouter , Switch, Route} from 'react-router-dom'\nimport Nav from './Nav/Nav';\nimport Home from './Home/Home';\nimport Jobs from './components/Jobs/Jobs';\nimport Account from './components/Account/Account';\nimport \"./assets/app.css\"; \nexport default class App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: \"\",\n      token: \"\"\n    };\n    this.updateUser = this.updateUser.bind(this); \n  }\n  componentDidMount(){\n    let token = localStorage.getItem(\"token\");\n    let user = localStorage.getItem(\"user\"); \n    if ((token && user) && token.length && user.length){\n        this.setState({user, token}); \n    };\n}\n  updateUser(action, login={user: \"\", token: \"\", userId: \"\", userDetails:{}}){\n    switch(action){\n      case \"out\": \n      this.setState({user: \"\", token: \"\"});\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\"); \n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"userDetails\");      \n      break; \n  default: \n      const {user, token, userId, userDetails} = login; \n      this.setState({user, token}); \n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", user); \n      localStorage.setItem(\"userId\", userId);\n      localStorage.setItem(\"userDetails\", JSON.stringify(userDetails));\n      break;\n    }\n  };\n\n  \n\n  render(){\n    return (\n      <BrowserRouter>\n        <Nav user={this.state.user} updateUser={this.updateUser} token={this.state.token}/>\n        <hr />\n\n        <Switch>\n\n          <Route exact path=\"/\">\n              <Home />\n          </Route>\n\n          <Route path=\"/jobs\">\n            <Jobs user={this.state.user}/>\n          </Route>\n\n          <Route path=\"/account\">\n            <Account />\n          </Route>\n\n        </Switch>\n\n      </BrowserRouter>\n  )};\n};"]},"metadata":{},"sourceType":"module"}