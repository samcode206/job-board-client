{"ast":null,"code":"var _jsxFileName = \"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/preMadeJobRes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PreMadeRes({\n  allRessponsibilities,\n  preMadeResponsibilites,\n  setpreMadeResponsibilites,\n  active,\n  setActive,\n  goBack,\n  getResps\n}) {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: active ? \"modal is-active\" : \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"modal-card-head\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"modal-card-title\",\n            children: \"Job Responsibilities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => {\n              setActive(false);\n              goBack(true);\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon is-small\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-backspace\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 13,\n                columnNumber: 135\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 103\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"modal-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"control has-icons-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                placeholder: \"Search pre-made responsibilites\",\n                value: searchTerm,\n                onChange: e => {\n                  const searchVal = e.target.value;\n                  const premadeRes = [...preMadeResponsibilites];\n                  setSearchTerm(searchVal);\n                  const n = premadeRes.filter(({\n                    value\n                  }) => {\n                    const v = value.toLowerCase();\n                    return v.includes(searchTerm.toLowerCase());\n                  });\n                  setpreMadeResponsibilites(n);\n\n                  if (searchTerm.length === 0 || searchVal.length === 0) {\n                    setpreMadeResponsibilites(allRessponsibilities);\n                  }\n\n                  ;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon is-small is-left\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }, this), preMadeResponsibilites.map(({\n            value,\n            selected\n          }) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              id: value,\n              style: {\n                cursor: \"pointer\"\n              },\n              className: selected ? \"notification is-success\" : \"notification\",\n              onClick: e => {\n                const id = e.target.id;\n                const newPremade = [...preMadeResponsibilites];\n                const i = preMadeResponsibilites.findIndex(({\n                  value\n                }) => value === id);\n                newPremade[i] = {\n                  value: preMadeResponsibilites[i].value,\n                  selected: !preMadeResponsibilites[i].selected\n                };\n                getResps(newPremade);\n                setpreMadeResponsibilites(newPremade);\n              },\n              children: value\n            }, value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 36\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(PreMadeRes, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n\n_c = PreMadeRes;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreMadeRes\");","map":{"version":3,"sources":["/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/preMadeJobRes.js"],"names":["React","useState","PreMadeRes","allRessponsibilities","preMadeResponsibilites","setpreMadeResponsibilites","active","setActive","goBack","getResps","searchTerm","setSearchTerm","e","searchVal","target","value","premadeRes","n","filter","v","toLowerCase","includes","length","map","selected","cursor","id","newPremade","i","findIndex"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'; \n\n\nexport default function PreMadeRes({allRessponsibilities,preMadeResponsibilites,setpreMadeResponsibilites, active, setActive, goBack, getResps}){\n    const [searchTerm, setSearchTerm] = useState(\"\"); \n\n    return <>\n                <div className={active ? \"modal is-active\" : \"modal\"}>\n                    <div className=\"modal-background\"></div>\n                    <div className=\"modal-card\">\n                    <header className=\"modal-card-head\">\n                        <p className=\"modal-card-title\">Job Responsibilities</p>\n                        <button className=\"button\" onClick={()=> {setActive(false); goBack(true);}} > <span className=\"icon is-small\"><i className=\"fas fa-backspace\"></i></span></button>\n                    </header>\n\n                    <section className=\"modal-card-body\">\n\n                    <div className=\"field\">\n                    <div className=\"control has-icons-left\">\n\n                    <input className=\"input\" placeholder=\"Search pre-made responsibilites\" value={searchTerm} onChange={(e)=>{\n                        const searchVal = e.target.value;\n                        const premadeRes = [...preMadeResponsibilites];\n                        setSearchTerm(searchVal); \n                       const n = premadeRes.filter(({value})=> {\n                           const v = value.toLowerCase();\n                           return v.includes(searchTerm.toLowerCase())\n                        });\n                        setpreMadeResponsibilites(n);\n                        if (searchTerm.length === 0 || searchVal.length === 0){\n                            setpreMadeResponsibilites(allRessponsibilities);\n                        };\n                        \n\n                    }}/>\n                    <span className=\"icon is-small is-left\"><i className=\"fas fa-search\"></i></span>\n                    </div>\n                    </div>\n                    \n\n                    {\n                        preMadeResponsibilites.map(({value, selected})=> {\n                            return <div id={value} style={{cursor:\"pointer\"}}\n                             className={selected ? \"notification is-success\" : \"notification\"} \n                             onClick={(e)=>{\n                                const id = e.target.id; \n                                const newPremade = [...preMadeResponsibilites];\n                                const i = preMadeResponsibilites.findIndex(({value}) => value ===id);\n                                newPremade[i] = {value: preMadeResponsibilites[i].value, selected: !preMadeResponsibilites[i].selected}\n                                getResps(newPremade);\n                                setpreMadeResponsibilites(newPremade);\n                             }}\n                             key={value}>{value}</div>\n                        })\n                    }\n\n                    </section>\n\n                    </div>\n                </div>\n\n    </>\n};\n"]},"metadata":{},"sourceType":"module"}