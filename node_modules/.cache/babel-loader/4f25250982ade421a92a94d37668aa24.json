{"ast":null,"code":"var _jsxFileName = \"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/SalaryRange.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SalaryRange({\n  setSalaryRange\n}) {\n  _s();\n\n  const salaryType = {\n    yearly: \"$ / Year\",\n    hourly: \"$ / Hour\"\n  };\n  const [yearly, setYearly] = useState(true);\n  const [salaryFrom, setSalaryFrom] = useState(\"\");\n  const [salaryTo, setSalaryTo] = useState(\"\");\n\n  const salaryTypeHandler = e => {\n    if (e.target.value === \"hourly\") {\n      setYearly(false);\n      if (salaryFrom.includes(salaryType.yearly)) setSalaryFrom(salaryFrom.replace(salaryType.yearly, salaryType.hourly));\n      if (salaryTo.includes(salaryType.yearly)) setSalaryTo(salaryTo.replace(salaryType.yearly, salaryType.hourly));\n    } else {\n      setYearly(true);\n      if (salaryFrom.includes(salaryType.hourly)) setSalaryFrom(salaryFrom.replace(salaryType.hourly, salaryType.yearly));\n      if (salaryTo.includes(salaryType.hourly)) setSalaryTo(salaryTo.replace(salaryType.hourly, salaryType.yearly));\n    }\n\n    salaryFormatter();\n  };\n\n  const salaryHandler = e => {\n    if (e.target.id === \"from\") {\n      const val = e.target.value.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      setSalaryFrom(val);\n    } else if (e.target.id === \"to\") {\n      const val = e.target.value.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      setSalaryTo(val);\n    }\n\n    salaryFormatter();\n  };\n\n  const onBlurHandler = () => {\n    const fromInt = parseInt(salaryFrom);\n    const toInt = parseInt(salaryTo);\n\n    if (fromInt !== NaN && fromInt > 0 && !salaryFrom.includes(salaryType.yearly) && !salaryFrom.includes(salaryType.hourly)) {\n      yearly ? setSalaryFrom(salaryFrom + salaryType.yearly) : setSalaryFrom(salaryFrom + salaryType.hourly);\n    }\n\n    if (toInt !== NaN && toInt > 0 && !salaryTo.includes(salaryType.yearly) && !salaryTo.includes(salaryType.hourly)) {\n      yearly ? setSalaryTo(salaryTo + salaryType.yearly) : setSalaryTo(salaryTo + salaryType.hourly);\n    }\n  };\n\n  const onFocusHandler = e => {\n    if (e.target.id === \"from\") {\n      setSalaryFrom(salaryFrom.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n    } else {\n      setSalaryTo(salaryTo.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n    }\n  };\n\n  const salaryFormatter = () => {\n    let fromSalary = salaryFrom.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    let toSalary = salaryTo.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    if (yearly) {\n      const i = fromSalary.indexOf(\",\");\n      const shortenedF = fromSalary.slice(0, i) + \"k\";\n      const j = toSalary.indexOf(\",\");\n      const shortenedT = toSalary.slice(0, j) + \"k\";\n      const combined = shortenedF + \"-\" + shortenedT;\n      console.log(combined);\n      setSalaryRange({\n        yearly: true,\n        range: combined\n      });\n    } else {\n      setSalaryRange({\n        yearly: false,\n        range: fromSalary + \"h\" + \"-\" + toSalary + \"h\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      children: \"Salary Range\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      onChange: salaryTypeHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"radio\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"range\",\n            value: \"hourly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), \"Hourly\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"radio\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"range\",\n            value: \"yearly\",\n            defaultChecked: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), \"Yearly\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field is-horizontal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            onBlur: onBlurHandler,\n            onFocus: onFocusHandler,\n            placeholder: \"from\",\n            id: \"from\",\n            value: salaryFrom,\n            onChange: salaryHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            onBlur: onBlurHandler,\n            onFocus: onFocusHandler,\n            placeholder: \"Up to\",\n            id: \"to\",\n            value: salaryTo,\n            onChange: salaryHandler,\n            style: {\n              marginLeft: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SalaryRange, \"v6Kxq8j3ICHenl/eYL1jOrFz7qM=\");\n\n_c = SalaryRange;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaryRange\");","map":{"version":3,"sources":["/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/SalaryRange.js"],"names":["React","useState","SalaryRange","setSalaryRange","salaryType","yearly","hourly","setYearly","salaryFrom","setSalaryFrom","salaryTo","setSalaryTo","salaryTypeHandler","e","target","value","includes","replace","salaryFormatter","salaryHandler","id","val","onBlurHandler","fromInt","parseInt","toInt","NaN","onFocusHandler","fromSalary","toSalary","i","indexOf","shortenedF","slice","j","shortenedT","combined","console","log","range","marginLeft"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\n\n\nexport default function SalaryRange({setSalaryRange}){\n    const salaryType = {\n        yearly: \"$ / Year\",\n        hourly: \"$ / Hour\"\n    }\n    const [yearly, setYearly] = useState(true);\n    const [salaryFrom, setSalaryFrom] = useState(\"\");\n    const [salaryTo, setSalaryTo] = useState(\"\");\n\n    const salaryTypeHandler = (e) =>{\n        if (e.target.value === \"hourly\"){\n         setYearly(false);\n         if (salaryFrom.includes(salaryType.yearly)) setSalaryFrom(salaryFrom.replace(salaryType.yearly, salaryType.hourly));\n         if (salaryTo.includes(salaryType.yearly)) setSalaryTo(salaryTo.replace(salaryType.yearly, salaryType.hourly));\n        } else {\n         setYearly(true); \n         if (salaryFrom.includes(salaryType.hourly)) setSalaryFrom(salaryFrom.replace(salaryType.hourly, salaryType.yearly));\n         if (salaryTo.includes(salaryType.hourly)) setSalaryTo(salaryTo.replace(salaryType.hourly, salaryType.yearly));\n        }\n        salaryFormatter();\n     };\n\n     const salaryHandler = (e) => {\n        if (e.target.id === \"from\"){\n            const val = e.target.value.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n            setSalaryFrom(val);\n            \n        } else if (e.target.id === \"to\"){\n            const val = e.target.value.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n            setSalaryTo(val);\n        }\n        salaryFormatter();\n    };\n\n\n    const onBlurHandler = () => {\n        const fromInt = parseInt(salaryFrom);\n        const toInt = parseInt(salaryTo);\n        if (fromInt !== NaN && fromInt > 0 && (!salaryFrom.includes(salaryType.yearly)  && !salaryFrom.includes(salaryType.hourly))){\n            yearly ? setSalaryFrom(salaryFrom + salaryType.yearly) : setSalaryFrom(salaryFrom + salaryType.hourly);\n        }\n        if (toInt !== NaN && toInt > 0 && (!salaryTo.includes(salaryType.yearly) && !salaryTo.includes(salaryType.hourly))){\n            yearly ? setSalaryTo(salaryTo + salaryType.yearly) : setSalaryTo(salaryTo + salaryType.hourly)\n        } \n    };\n    \n    const onFocusHandler = (e) => {\n        if (e.target.id === \"from\"){\n            setSalaryFrom(salaryFrom.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))\n        } else {\n            setSalaryTo(salaryTo.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n        }\n    }; \n\n    const salaryFormatter = () => {\n        let fromSalary = salaryFrom.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        let toSalary = salaryTo.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        if (yearly){\n            const i = fromSalary.indexOf(\",\");\n            const shortenedF =  fromSalary.slice(0, i) + \"k\";\n            const j = toSalary.indexOf(\",\");\n            const shortenedT = toSalary.slice(0, j) + \"k\";\n            const combined = shortenedF + \"-\" + shortenedT; \n            console.log(combined);\n            setSalaryRange({yearly: true, range: combined});\n\n        } else {\n            setSalaryRange({yearly: false, range: fromSalary +\"h\" + \"-\" + toSalary + \"h\"})\n        }\n    };\n\n \n    return (\n        <>\n           <label className=\"label\">Salary Range</label>\n            <div className=\"field\" onChange={salaryTypeHandler}>\n                <div className=\"control\">\n                <label className=\"radio\">\n                <input type=\"radio\" name=\"range\" value=\"hourly\"/>\n                Hourly\n            </label>\n            <label className=\"radio\">\n                <input type=\"radio\" name=\"range\" value=\"yearly\" defaultChecked/>\n                Yearly\n            </label>\n               </div>\n            </div>\n            {/*  */}\n            \n            <div className=\"field is-horizontal\">\n                <div className=\"field-body\">\n                    <div className=\"control\">\n                        <input className=\"input\"\n                         onBlur={onBlurHandler}  \n                         onFocus={onFocusHandler}\n                         placeholder=\"from\" id=\"from\" \n                         value={salaryFrom} onChange={salaryHandler}\n                         />\n                    </div>\n                    \n                    <div className=\"control\">\n                        <input className=\"input\" \n                         onBlur={onBlurHandler} \n                         onFocus={onFocusHandler}\n                         placeholder=\"Up to\" id=\"to\" \n                         value={salaryTo} onChange={salaryHandler} \n                         style={{ marginLeft: \"10px\"}}/>\n                    </div>\n                </div>\n                \n            </div>\n\n        </>\n    )\n};"]},"metadata":{},"sourceType":"module"}