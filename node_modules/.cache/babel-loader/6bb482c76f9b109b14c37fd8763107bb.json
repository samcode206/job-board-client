{"ast":null,"code":"var _jsxFileName = \"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/Jobs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport baseURL from \"../../../../Server\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Jobs() {\n  _s();\n\n  const [appliedJobs, setAppliedJobs] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const {\n          data: user\n        } = await baseURL.get(`/user/${localStorage.getItem(\"userId\")}`);\n        setAppliedJobs(user.appliedJobs);\n      } catch (err) {}\n    })();\n  }, []);\n  console.log(appliedJobs);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: appliedJobs.length ? appliedJobs.map(job => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"is-flex is-justify-content-space-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"title\",\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-danger\",\n              onClick: async () => {\n                const res = await baseURL.put(`/app/${job.id}`, {\n                  userId: localStorage.getItem(\"userId\")\n                });\n\n                if (res.status === 201) {\n                  const newAppliedJobs = [...appliedJobs];\n                  setAppliedJobs(newAppliedJobs.filter(({\n                    id\n                  }) => id !== job.id));\n                }\n              },\n              children: \"Withdraw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 28\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification has-text-centered\",\n      children: \"You have not Yet Applied for any jobs!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Jobs, \"o2AmS4+cHthpyeXcMaOjdt2wRmQ=\");\n\n_c = Jobs;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"sources":["/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/Jobs.js"],"names":["React","useEffect","useState","baseURL","Jobs","appliedJobs","setAppliedJobs","data","user","get","localStorage","getItem","err","console","log","length","map","job","title","res","put","id","userId","status","newAppliedJobs","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,KAAC,YAAS;AACN,UAAI;AACA,cAAM;AAACM,UAAAA,IAAI,EAAGC;AAAR,YAAiB,MAAML,OAAO,CAACM,GAAR,CAAa,SAAQC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B,EAApD,CAA7B;AACAL,QAAAA,cAAc,CAACE,IAAI,CAACH,WAAN,CAAd;AACH,OAHD,CAGE,OAAMO,GAAN,EAAU,CAEX;AAEJ,KARD;AASH,GAVQ,EAUN,EAVM,CAAT;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACA,sBACI;AAAA,cAEQA,WAAW,CAACU,MAAZ,GACAV,WAAW,CAACW,GAAZ,CAAgBC,GAAG,IAAI;AACnB,0BAAO;AAAkB,QAAA,SAAS,EAAC,KAA5B;AAAA,+BACH;AAAK,UAAA,SAAS,EAAC,0CAAf;AAAA,kCACA;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA,sBAAuBA,GAAG,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAC,kBAAlB;AAAqC,cAAA,OAAO,EAAE,YAAU;AACrD,sBAAMC,GAAG,GAAG,MAAMhB,OAAO,CAACiB,GAAR,CAAa,QAAOH,GAAG,CAACI,EAAG,EAA3B,EAA8B;AAC3CC,kBAAAA,MAAM,EAAEZ,YAAY,CAACC,OAAb,CAAqB,QAArB;AADmC,iBAA9B,CAAlB;;AAGC,oBAAIQ,GAAG,CAACI,MAAJ,KAAe,GAAnB,EAAuB;AACnB,wBAAMC,cAAc,GAAG,CAAC,GAAGnB,WAAJ,CAAvB;AACAC,kBAAAA,cAAc,CAACkB,cAAc,CAACC,MAAf,CAAsB,CAAC;AAACJ,oBAAAA;AAAD,mBAAD,KAASA,EAAE,KAAKJ,GAAG,CAACI,EAA1C,CAAD,CAAd;AACH;AACJ,eARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,SAAUJ,GAAG,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AAiBH,KAlBD,CADA,gBAmBK;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArBb;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAzCuBjB,I;;KAAAA,I;AAyCvB","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport baseURL from \"../../../../Server\";\n\nexport default function Jobs(){\n    const [appliedJobs, setAppliedJobs] = useState([]);\n\n    useEffect(()=>{\n        (async()=>{\n            try {\n                const {data : user} =  await baseURL.get(`/user/${localStorage.getItem(\"userId\")}`); \n                setAppliedJobs(user.appliedJobs);\n            } catch(err){\n\n            }\n          \n        })()\n    }, []);\n    console.log(appliedJobs)\n    return (\n        <div>\n            {\n                appliedJobs.length ? \n                appliedJobs.map(job => {\n                    return <div key={job.id} className=\"box\">\n                        <div className=\"is-flex is-justify-content-space-between\">\n                        <h3 className=\"title\">{job.title}</h3>\n                        <div className=\"control\">\n                            <button className=\"button is-danger\" onClick={async ()=>{\n                               const res = await baseURL.put(`/app/${job.id}`, {\n                                    userId: localStorage.getItem(\"userId\")\n                                });\n                                if (res.status === 201){\n                                    const newAppliedJobs = [...appliedJobs];\n                                    setAppliedJobs(newAppliedJobs.filter(({id})=> id !== job.id));\n                                }\n                            }}>\n                                Withdraw</button>\n                        </div>\n                        </div>\n                    </div>\n                }) : <div className=\"notification has-text-centered\">You have not Yet Applied for any jobs!</div>\n            }\n        </div>\n    )\n}; "]},"metadata":{},"sourceType":"module"}