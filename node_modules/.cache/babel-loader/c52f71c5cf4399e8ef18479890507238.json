{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport function useToggle() {\n  _s();\n\n  const [activeSkills, setActiveSkills] = useState(false);\n  const [activeEdu, setActiveEdu] = useState(false);\n  const [activeCerts, setActiveCerts] = useState(false);\n  const [activeWEXP, setActiveWEXP] = useState(false);\n\n  const toggleHandler = e => {\n    switch (e.target.id) {\n      case \"skills\":\n        setActiveSkills(!activeSkills);\n        break;\n\n      case \"edu\":\n        setActiveEdu(!activeEdu);\n        break;\n\n      case \"certs\":\n        setActiveCerts(!activeCerts);\n        break;\n\n      default:\n        setActiveWEXP(!activeWEXP);\n        break;\n    }\n  };\n\n  return [activeSkills, activeEdu, activeCerts, activeWEXP, toggleHandler];\n}\n\n_s(useToggle, \"j7pRjGT0z8xJoo2c79Xl+z9kcAg=\");\n\n;","map":{"version":3,"sources":["/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/useToggle.js"],"names":["useState","useToggle","activeSkills","setActiveSkills","activeEdu","setActiveEdu","activeCerts","setActiveCerts","activeWEXP","setActiveWEXP","toggleHandler","e","target","id"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAEA,OAAO,SAASC,SAAT,GAAoB;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMU,aAAa,GAAIC,CAAD,IAAM;AACxB,YAAOA,CAAC,CAACC,MAAF,CAASC,EAAhB;AACI,WAAK,QAAL;AACIV,QAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACA;;AACJ,WAAK,KAAL;AACIG,QAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACA;;AACJ,WAAK,OAAL;AACIG,QAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACA;;AACJ;AACIG,QAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACA;AAZR;AAcH,GAfD;;AAiBA,SAAO,CACHN,YADG,EAEHE,SAFG,EAGHE,WAHG,EAIHE,UAJG,EAKHE,aALG,CAAP;AAQH;;GA/BeT,S;;AA+Bf","sourcesContent":["import {useState} from 'react'; \n\nexport function useToggle(){\n    const [activeSkills, setActiveSkills] = useState(false);\n    const [activeEdu, setActiveEdu] = useState(false);\n    const [activeCerts, setActiveCerts] = useState(false);\n    const [activeWEXP, setActiveWEXP] = useState(false);\n\n    const toggleHandler = (e) =>{\n        switch(e.target.id){\n            case \"skills\":\n                setActiveSkills(!activeSkills);\n                break;\n            case \"edu\":\n                setActiveEdu(!activeEdu);\n                break;\n            case \"certs\":\n                setActiveCerts(!activeCerts);\n                break;\n            default:\n                setActiveWEXP(!activeWEXP);\n                break;\n        }\n    }\n\n    return [\n        activeSkills, \n        activeEdu, \n        activeCerts,\n        activeWEXP,\n        toggleHandler\n]\n\n};"]},"metadata":{},"sourceType":"module"}