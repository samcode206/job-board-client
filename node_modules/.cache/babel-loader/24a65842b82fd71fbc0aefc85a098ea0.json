{"ast":null,"code":"var _jsxFileName = \"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/WorkExp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport EmptyWarn from './sub/EmptyWarn';\nimport DatePicker from 'react-date-picker';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WorkEXP({\n  experience,\n  updateResume\n}) {\n  _s();\n\n  const [experienceList, setExperiencelist] = experience;\n  const [startdate, setStartdate] = useState(null);\n  const [enddate, setEnddate] = useState(null);\n  const [currEmployed, setCurrEmployed] = useState(true);\n  const [addMode, setAddMode] = useState(false); // input states \n\n  const [position, setPosition] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n\n  const addHandler = () => {\n    const newExp = {\n      id: nanoid(),\n      position: position,\n      companyName: companyName,\n      startDate: dateFormatter(startdate),\n      currentlyEmployed: currEmployed,\n      endDate: enddate ? dateFormatter(enddate) : null\n    };\n    const newExpList = [...experienceList];\n    newExpList.push(newExp);\n    setExperiencelist(newExpList);\n    setPosition(\"\");\n    setCompanyName(\"\");\n    setStartdate(null);\n    setEnddate(null);\n    setCurrEmployed(true);\n    setAddMode(!addMode);\n  };\n\n  const deleteHandler = identifier => {\n    const newEXps = [...experienceList].filter(({\n      id\n    }) => id !== identifier);\n    setExperiencelist(newEXps);\n  };\n\n  const submitHandler = () => {};\n\n  const renderExpList = () => {\n    return experienceList.map(({\n      position,\n      companyName,\n      startDate,\n      currentlyEmployed,\n      endDate,\n      id\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"is-flex is-flex-direction-row-reverse\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon is-small\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                id: id,\n                onClick: () => deleteHandler(id),\n                className: \"far fa-trash-alt is-clickable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 109\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 77\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 72\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Position: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 20\n          }, this), position]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Company Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 20\n          }, this), companyName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Start Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 20\n          }, this), startDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), !currentlyEmployed && /*#__PURE__*/_jsxDEV(\"o\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"End Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 46\n          }, this), endDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 43\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  const dateFormatter = date => {\n    return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: experienceList.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", renderExpList(), \" \"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(EmptyWarn, {\n        children: \"Your experience section is empty fill with either work experience or Projects!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 67\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), addMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Position:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            placeholder: \"Enter Your Title\",\n            value: position,\n            onChange: e => setPosition(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Company Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            placeholder: \"Enter company or project name\",\n            value: companyName,\n            onChange: e => setCompanyName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Start Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            value: startdate,\n            onChange: setStartdate,\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control mt-3\",\n          onChange: e => setCurrEmployed(e.target.value === \"1\"),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Currently Employed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"radio\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"curr\",\n              defaultChecked: true,\n              value: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 24\n            }, this), \"Yes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"radio\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"curr\",\n              value: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 24\n            }, this), \"No\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 16\n        }, this), !currEmployed ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"End Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            value: enddate,\n            onChange: setEnddate,\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 34\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true) : null, position.length > 3 && companyName.length > 3 && startdate && (currEmployed || enddate) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-link is-light\",\n          onClick: addHandler,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 14\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field is-grouped is-grouped-centered\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-link\",\n          onClick: updateResume,\n          children: \"Save Skills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            setAddMode(!addMode);\n          },\n          children: [\" \", addMode ? \"Close Editor\" : \"Edit Experience\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 12\n  }, this);\n}\n\n_s(WorkEXP, \"U76RyBLrJO0VrIRFsoos8zHgNfU=\");\n\n_c = WorkEXP;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkEXP\");","map":{"version":3,"sources":["/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/WorkExp.js"],"names":["React","useState","EmptyWarn","DatePicker","nanoid","WorkEXP","experience","updateResume","experienceList","setExperiencelist","startdate","setStartdate","enddate","setEnddate","currEmployed","setCurrEmployed","addMode","setAddMode","position","setPosition","companyName","setCompanyName","addHandler","newExp","id","startDate","dateFormatter","currentlyEmployed","endDate","newExpList","push","deleteHandler","identifier","newEXps","filter","submitHandler","renderExpList","map","date","getMonth","getDate","getFullYear","length","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAAQC,MAAR,QAAqB,QAArB;;;AAEA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAjB,EAA4C;AAAA;;AACvD,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCH,UAA5C;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC,CALuD,CAOvD;;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMqB,UAAU,GAAG,MAAM;AACrB,UAAMC,MAAM,GAAG;AACXC,MAAAA,EAAE,EAAEpB,MAAM,EADC;AAEXc,MAAAA,QAAQ,EAAEA,QAFC;AAGXE,MAAAA,WAAW,EAAEA,WAHF;AAIXK,MAAAA,SAAS,EAAEC,aAAa,CAAChB,SAAD,CAJb;AAKXiB,MAAAA,iBAAiB,EAAEb,YALR;AAMXc,MAAAA,OAAO,EAAEhB,OAAO,GAAGc,aAAa,CAACd,OAAD,CAAhB,GAA4B;AANjC,KAAf;AAQA,UAAMiB,UAAU,GAAG,CAAC,GAAGrB,cAAJ,CAAnB;AACAqB,IAAAA,UAAU,CAACC,IAAX,CAAgBP,MAAhB;AACAd,IAAAA,iBAAiB,CAACoB,UAAD,CAAjB;AACAV,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAV,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAlBD;;AAoBA,QAAMe,aAAa,GAAIC,UAAD,IAAgB;AAClC,UAAMC,OAAO,GAAG,CAAC,GAAGzB,cAAJ,EAAoB0B,MAApB,CAA2B,CAAC;AAACV,MAAAA;AAAD,KAAD,KAASA,EAAE,KAAKQ,UAA3C,CAAhB;AACAvB,IAAAA,iBAAiB,CAACwB,OAAD,CAAjB;AACH,GAHD;;AAKA,QAAME,aAAa,GAAG,MAAM,CAE3B,CAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AACxB,WAAO5B,cAAc,CAAC6B,GAAf,CAAmB,CAAC;AAACnB,MAAAA,QAAD;AAAWE,MAAAA,WAAX;AAAwBK,MAAAA,SAAxB;AAAmCE,MAAAA,iBAAnC;AAAsDC,MAAAA,OAAtD;AAA+DJ,MAAAA;AAA/D,KAAD,KAAuE;AAC7F,0BAAO;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACH;AAAK,UAAA,SAAS,EAAC,uCAAf;AAAA,iCAAuD;AAAA,mCAAK;AAAM,cAAA,SAAS,EAAC,eAAhB;AAAA,qCAAgC;AAAG,gBAAA,EAAE,EAAEA,EAAP;AAC5F,gBAAA,OAAO,EAAE,MAAIO,aAAa,CAACP,EAAD,CADkE;AAC5D,gBAAA,SAAS,EAAC;AADkD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,gBADG,eAGH;AAAA,kCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,EAA+BN,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHG,eAIH;AAAA,kCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,EAAmCE,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJG,eAKH;AAAA,kCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,EAAiCK,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALG,EAOC,CAACE,iBAAD,iBAAsB;AAAA,kCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,EAA+BC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPvB;AAAA,SAA0BJ,EAA1B;AAAA;AAAA;AAAA;AAAA,cAAP;AAWH,KAZM,CAAP;AAaH,GAdD;;AAgBA,QAAME,aAAa,GAAIY,IAAD,IAAS;AAC3B,WAAQ,GAAEA,IAAI,CAACC,QAAL,KAAkB,CAAE,IAAGD,IAAI,CAACE,OAAL,EAAe,IAAGF,IAAI,CAACG,WAAL,EAAmB,EAAtE;AACH,GAFD;;AAIA,sBAAO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACH;AAAA,gBAEQjC,cAAc,CAACkC,MAAf,gBAAwB;AAAA,wBAAIN,aAAa,EAAjB;AAAA,sBAAxB,gBAAkD,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAF1D;AAAA;AAAA;AAAA;AAAA,YADG,EAOEpB,OAAO,gBACT;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACC;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEI;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAyB,YAAA,WAAW,EAAC,kBAArC;AAAwD,YAAA,KAAK,EAAEE,QAA/D;AAAyE,YAAA,QAAQ,EAAGyB,CAAD,IAAMxB,WAAW,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV;AAApG;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAQA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACI;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAyB,YAAA,WAAW,EAAC,+BAArC;AAAqE,YAAA,KAAK,EAAEzB,WAA5E;AAAyF,YAAA,QAAQ,EAAGuB,CAAD,IAAMtB,cAAc,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAvH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARA,eAgBA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAEnC,SAAnB;AAA8B,YAAA,QAAQ,EAAEC,YAAxC;AAAsD,YAAA,SAAS,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,QAAQ,EAAGgC,CAAD,IAAO5B,eAAe,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,GAApB,CAA9D;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA,oCACI;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,IAAI,EAAC,MAAzB;AAAgC,cAAA,cAAc,MAA9C;AAA+C,cAAA,KAAK,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAMI;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA,oCACI;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,IAAI,EAAC,MAAzB;AAAgC,cAAA,KAAK,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,EAmBK,CAAC/B,YAAD,gBAAiB;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACjB;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADiB,eAEb,QAAC,UAAD;AAAY,YAAA,KAAK,EAAEF,OAAnB;AAA4B,YAAA,QAAQ,EAAEC,UAAtC;AAAkD,YAAA,SAAS,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,kBAFa;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjB,GAGS,IAtBd;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBA;AAAA,oBADS,GA6CJ,IApDL,EAwDCK,QAAQ,CAACwB,MAAT,GAAkB,CAAlB,IAAuBtB,WAAW,CAACsB,MAAZ,GAAqB,CAA5C,IAAiDhC,SAAjD,KAA+DI,YAAY,IAAIF,OAA/E,iBACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,yBAAlB;AAA4C,UAAA,OAAO,EAAEU,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADD,GAKU,IA7DX,eAgED;AAAA;AAAA;AAAA;AAAA,YAhEC,eAiED;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA,8BACM;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAEf,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADN,eAIM;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAK;AAACU,YAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AAAqB,WAA/D;AAAA,0BAAmEA,OAAO,GAAG,cAAH,GAAoB,iBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJN;AAAA;AAAA;AAAA;AAAA;AAAA,YAjEC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AA0EH;;GAtIuBX,O;;KAAAA,O","sourcesContent":["import React, { useState } from 'react';\nimport EmptyWarn from './sub/EmptyWarn';\nimport DatePicker from 'react-date-picker'; \nimport {nanoid} from 'nanoid';\n\nexport default function WorkEXP({experience, updateResume}){\n    const [experienceList, setExperiencelist] = experience; \n    const [startdate, setStartdate] = useState(null);\n    const [enddate, setEnddate] = useState(null);\n    const [currEmployed, setCurrEmployed] = useState(true); \n    const [addMode, setAddMode] = useState(false); \n\n    // input states \n    const [position, setPosition] = useState(\"\");\n    const [companyName, setCompanyName] = useState(\"\");\n\n    const addHandler = () => {\n        const newExp = {\n            id: nanoid(),\n            position: position,\n            companyName: companyName,\n            startDate: dateFormatter(startdate), \n            currentlyEmployed: currEmployed,\n            endDate: enddate ? dateFormatter(enddate) : null \n        };\n        const newExpList = [...experienceList]; \n        newExpList.push(newExp);\n        setExperiencelist(newExpList);\n        setPosition(\"\");\n        setCompanyName(\"\");\n        setStartdate(null);\n        setEnddate(null); \n        setCurrEmployed(true);\n        setAddMode(!addMode);\n    }; \n\n    const deleteHandler = (identifier) => {\n        const newEXps = [...experienceList].filter(({id})=> id !== identifier);\n        setExperiencelist(newEXps);\n    }; \n\n    const submitHandler = () => {\n\n    }; \n\n    const renderExpList = () => {\n        return experienceList.map(({position, companyName, startDate, currentlyEmployed, endDate, id})=> {\n            return <div className=\"box\" key={id}>\n                <div className=\"is-flex is-flex-direction-row-reverse\"><div><span className=\"icon is-small\"><i id={id} \n                onClick={()=>deleteHandler(id)} className=\"far fa-trash-alt is-clickable\"></i></span></div></div>\n                <p><strong>Position: </strong>{position}</p>\n                <p><strong>Company Name: </strong>{companyName}</p>\n                <p><strong>Start Date: </strong>{startDate}</p>\n                {\n                    !currentlyEmployed && <o><strong>End Date: </strong>{endDate}</o>\n                }\n\n            </div>\n        })\n    };\n\n    const dateFormatter = (date) =>{\n        return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`\n    };\n\n    return <div className=\"container\">\n        <div>\n            {\n                experienceList.length ? <> {renderExpList()} </>: <EmptyWarn>Your experience section is empty fill with either work experience or Projects!</EmptyWarn>\n            }\n        </div>\n            \n            {addMode ? (\n           <>\n           <div className=\"field mt-3\">\n               <div className=\"control\">\n                <label className=\"label\">Position:</label>\n                   <input className=\"input\" placeholder=\"Enter Your Title\" value={position} onChange={(e)=> setPosition(e.target.value)}/>\n               </div>\n           </div>\n           \n           <div className=\"field\">\n               <label className=\"label\">Company Name:</label>\n               <div className=\"control\">\n                   <input className=\"input\" placeholder=\"Enter company or project name\" value={companyName} onChange={(e)=> setCompanyName(e.target.value)}/>\n               </div>\n           </div>\n   \n   \n           <div className=\"field\">\n               <div className=\"control\">\n                   <label className=\"label\">Start Date:</label>\n                   <DatePicker value={startdate} onChange={setStartdate} className=\"input\" />\n               </div>\n   \n               <div className=\"control mt-3\" onChange={(e) => setCurrEmployed(e.target.value === \"1\")}>\n                   <label className=\"label\">Currently Employed:</label>\n                   <label className=\"radio\">\n                       <input type=\"radio\" name=\"curr\" defaultChecked value=\"1\"/>\n                       Yes\n                   </label>\n                   <label className=\"radio\">\n                       <input type=\"radio\" name=\"curr\" value=\"0\"/>\n                       No\n                   </label>\n               </div>\n               \n             {\n                !currEmployed ?  <div className=\"control mt-2\">\n                <label className=\"label\">End Date:</label>\n                    <DatePicker value={enddate} onChange={setEnddate} className=\"input\"/>\n                </div> : null \n             }  \n       \n               </div>\n               </>\n\n            ) : null}\n\n          \n        {\n            position.length > 3 && companyName.length > 3 && startdate && (currEmployed || enddate) ?\n             <div className=\"field\">\n                 <div className=\"control\">\n                     <button className=\"button is-link is-light\" onClick={addHandler}>Add</button>\n                </div>\n             </div> : null \n        } \n\n          <hr />\n          <div className=\"field is-grouped is-grouped-centered\">\n                <div className=\"control\">\n                    <button className=\"button is-link\" onClick={updateResume}>Save Skills</button>\n                </div>\n                <div className=\"control\">\n                    <button className=\"button\" onClick={()=> {setAddMode(!addMode)}}> {addMode ? \"Close Editor\" : \"Edit Experience\" }</button>\n                </div>\n          </div>\n    </div>\n}\n\n\n"]},"metadata":{},"sourceType":"module"}