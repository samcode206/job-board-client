{"ast":null,"code":"var _jsxFileName = \"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/Skills.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Skills({\n  allSkills,\n  skillHandler,\n  label\n}) {\n  _s();\n\n  const [skillsList, setskillsList] = useState(allSkills);\n  const [customSkill, setCustomSkill] = useState(\"\");\n  const [customSkillMode, setCustomSkillMode] = useState(false);\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: () => setShow(!show),\n      className: \"label\",\n      children: [label, \"  \", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: !show ? \"fas fa-angle-down\" : \"fas fa-angle-up\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), show ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field is-grouped is-grouped-multiline\",\n      children: [skillsList.map(({\n        selected,\n        name\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: !selected ? \"button\" : \"button is-success\",\n            id: name,\n            onClick: e => {\n              const i = skillsList.findIndex(({\n                name\n              }) => name === e.target.id);\n              const newskillsList = [...skillsList];\n              newskillsList[i] = {\n                selected: !newskillsList[i].selected,\n                name: newskillsList[i].name\n              };\n              setskillsList(newskillsList);\n              skillHandler(newskillsList);\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-link is-light\",\n          onClick: () => setCustomSkillMode(true),\n          children: \"Add Custom Skill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this) : null, customSkillMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field is-grouped is-grouped-centered is-horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          placeholder: \"Add Skill\",\n          onChange: e => {\n            setCustomSkill(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-success is-light\",\n          onClick: () => {\n            const newskillsList = [...skillsList];\n\n            if (!newskillsList.filter(({\n              name\n            }) => customSkill === name).length && customSkill.length >= 1) {\n              newskillsList.push({\n                name: customSkill,\n                selected: true\n              });\n              setskillsList(newskillsList);\n              skillHandler(newskillsList);\n            }\n          },\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-danger is-light\",\n          onClick: () => {\n            setCustomSkillMode(false);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(Skills, \"y4Mip3YRii19zTaJN55Br61yWwg=\");\n\n_c = Skills;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"sources":["/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/Skills.js"],"names":["React","useState","Skills","allSkills","skillHandler","label","skillsList","setskillsList","customSkill","setCustomSkill","customSkillMode","setCustomSkillMode","show","setShow","cursor","map","selected","name","e","i","findIndex","target","id","newskillsList","value","filter","length","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n\nexport default function Skills({allSkills, skillHandler, label}){\n    const [skillsList, setskillsList] = useState(allSkills);\n    const [customSkill, setCustomSkill] = useState(\"\"); \n    const [customSkillMode, setCustomSkillMode] = useState(false); \n    const [show, setShow] = useState(false);\n\n\n    return (\n        <>\n        <label \n        style={{cursor: \"pointer\"}} onClick={()=>setShow(!show)} className=\"label\">{label}  {\" \"}\n        <i className={!show ? \"fas fa-angle-down\" : \"fas fa-angle-up\"} aria-hidden=\"true\"></i>\n        </label>\n\n        {\n            show ?  <div className=\"field is-grouped is-grouped-multiline\">\n            {\n                skillsList.map(({selected, name}) =>{\n                    return <p className=\"control\" key={name}>\n                        <button className={!selected ? \"button\" : \"button is-success\"} id={name} onClick={(e)=>{\n                            const i = skillsList.findIndex(({name})=> name === e.target.id);\n                            const newskillsList = [...skillsList];\n                            newskillsList[i] = {selected: !newskillsList[i].selected, name: newskillsList[i].name}\n                            setskillsList(newskillsList);\n                           skillHandler(newskillsList);\n                        }}>\n                            {name}\n                        </button>\n                    </p>\n                })\n            }\n            <p className=\"control\">\n            <button className=\"button is-link is-light\" onClick={()=> setCustomSkillMode(true)}>\n                Add Custom Skill\n            </button>\n            </p>\n        </div> : null \n        }\n       \n        {\n            customSkillMode ?\n            <div className=\"field is-grouped is-grouped-centered is-horizontal\">\n            <div className=\"control\">\n            <input className=\"input\" placeholder=\"Add Skill\" onChange={(e)=>{\n                setCustomSkill(e.target.value); \n            }}/>\n            </div>\n            <div className=\"control\">\n            <button className=\"button is-success is-light\" onClick={()=>{\n                const newskillsList = [...skillsList];\n                if (!newskillsList.filter(({name}) => customSkill === name).length && customSkill.length >= 1){\n                    newskillsList.push({name: customSkill, selected: true});\n                    setskillsList(newskillsList);      \n                    skillHandler(newskillsList);\n                }\n            }}>submit</button>\n            </div>\n            <div className=\"control\">\n                <button className=\"button is-danger is-light\" onClick={()=>{setCustomSkillMode(false)}}>\n                Cancel\n                </button>\n            </div>\n            </div> \n             :\n             null\n        }\n       \n        </>\n    );\n}; \n\n\n"]},"metadata":{},"sourceType":"module"}