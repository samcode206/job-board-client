{"ast":null,"code":"var _jsxFileName = \"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/RecruiterViewJobs/ViewPostings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport baseURL from '../../../../../Server';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ViewPostings() {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [viewApplicantsMode, setViewApplicantsMode] = useState(false);\n  const [applicants, setApplicants] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const response = await baseURL.get(`/jobs/recruiter/${localStorage.getItem(\"user\")}`, {\n        body: {\n          createdBy: localStorage.getItem(\"user\")\n        }\n      });\n\n      if (response.status === 200) {\n        setJobs(response.data.jobs);\n      }\n    })();\n  }, []);\n  console.log(applicants);\n\n  const deleteHandler = async id => {\n    const res = await baseURL.delete(`/jobs/${id}`);\n\n    if (res.status === 201) {\n      const newJobs = [...jobs];\n      setJobs(newJobs.filter(j => j._id !== id));\n    }\n\n    ;\n  };\n\n  const renderJobs = () => {\n    return jobs.map(job => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: job.jobTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"subtitle\",\n          children: job.companyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field is-grouped\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-danger is-light\",\n              onClick: () => {\n                deleteHandler(job._id);\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-link is-light\",\n              onClick: () => {\n                const apicnts = jobs.filter(j => j._id === job._id).map(j => j.applicants);\n                setApplicants(...apicnts);\n                setViewApplicantsMode(true);\n              },\n              children: \"View Applicants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  const renderIsEmpty = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification has-text-centered\",\n      children: \"Looks like you have not created Any Job Postings, create one and come back to track and manage your job applications & applicants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: viewApplicantsMode ? \"modal is-active\" : \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title is-3 has-text-centered\",\n            children: \"Applicants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), applicants.length ? applicants.map(aplicant => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label\",\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: aplicant.fullname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label\",\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: aplicant.applicantEmail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label\",\n                children: \"Skills:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: aplicant.skills.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: s\n                }, s, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 62\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 36\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification has-text-centered\",\n            children: \"you have no applicants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"modal-close is-large\",\n        \"aria-label\": \"close\",\n        onClick: () => {\n          setViewApplicantsMode(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), jobs.length ? renderJobs() : renderIsEmpty()]\n  }, void 0, true);\n}\n\n_s(ViewPostings, \"8TZ54U8TDwNkU/bTzo38ONznZFs=\");\n\n_c = ViewPostings;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPostings\");","map":{"version":3,"sources":["/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/RecruiterViewJobs/ViewPostings.js"],"names":["React","useEffect","useState","baseURL","ViewPostings","jobs","setJobs","viewApplicantsMode","setViewApplicantsMode","applicants","setApplicants","response","get","localStorage","getItem","body","createdBy","status","data","console","log","deleteHandler","id","res","delete","newJobs","filter","j","_id","renderJobs","map","job","jobTitle","companyName","apicnts","renderIsEmpty","length","aplicant","fullname","applicantEmail","skills","s"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'; \nimport baseURL from '../../../../../Server';\n\n\n\nexport default function ViewPostings(){\n    \n    const [jobs, setJobs] = useState([]); \n    const [viewApplicantsMode, setViewApplicantsMode] = useState(false); \n    const [applicants, setApplicants] = useState([]);\n\n    useEffect(()=>{\n        (async ()=>{\n          const response = await baseURL.get(`/jobs/recruiter/${localStorage.getItem(\"user\")}`,{\n               body:{\n                    createdBy: localStorage.getItem(\"user\")\n                }\n            });\n            if (response.status === 200){\n                setJobs(response.data.jobs);\n            }\n\n        })()\n    }, [])\n    console.log(applicants); \n\n    const deleteHandler = async (id) => {\n       const res = await baseURL.delete(`/jobs/${id}`);\n       if (res.status === 201){\n            const newJobs = [...jobs]; \n            setJobs(newJobs.filter(j => j._id !== id));\n       }; \n    }; \n\n    const renderJobs = () => {\n        return jobs.map((job) => {\n            return <div className=\"box\">\n                <h1 className=\"title\">{job.jobTitle}</h1>\n                <h2 className=\"subtitle\">{job.companyName}</h2>\n                <div className=\"field is-grouped\">\n                    <div className=\"control\">\n                        <button className=\"button is-danger is-light\" onClick={()=>{\n                            deleteHandler(job._id);\n                        }}>Delete</button>\n                    </div>\n                    <div className=\"control\">\n                    <button className=\"button is-link is-light\" onClick={()=>{\n                        const apicnts = jobs.filter((j)=> j._id === job._id).map(j=> j.applicants);\n                        setApplicants(...apicnts);\n                        setViewApplicantsMode(true); \n                    }}\n                    >View Applicants</button>\n                    </div>\n                </div>\n            </div>\n        })\n    };\n\n    const renderIsEmpty = () => {\n        return <div className=\"notification has-text-centered\">\n            Looks like you have not created Any Job Postings, create one and come back to track and manage your job applications & applicants\n        </div>\n    }; \n\n    return (\n        <>\n        <div className={viewApplicantsMode ? \"modal is-active\" : \"modal\"}>\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-content\">\n            <div className=\"box\">\n                <h2 className=\"title is-3 has-text-centered\">Applicants</h2>\n                {\n                    applicants.length ? \n                        applicants.map((aplicant) => {\n                            return <div className=\"box\">\n                                <label className=\"label\">Name:</label>\n                                <p>{aplicant.fullname}</p>\n                                <label className=\"label\">Email:</label>\n                                <p>{aplicant.applicantEmail}</p>\n                                <label className=\"label\">Skills:</label>\n                                <ul>\n                                    {aplicant.skills.map(s=> <li key={s}>{s}</li>)}\n                                </ul>\n                                </div>\n                        \n                        })\n                    : <div className=\"notification has-text-centered\">you have no applicants</div>\n                }\n            </div>\n        </div>\n        <button class=\"modal-close is-large\" aria-label=\"close\" onClick={()=>{setViewApplicantsMode(false)}}></button>\n        </div> \n    \n       \n        {jobs.length ? renderJobs() : renderIsEmpty()}\n\n        </>\n    )\n};"]},"metadata":{},"sourceType":"module"}