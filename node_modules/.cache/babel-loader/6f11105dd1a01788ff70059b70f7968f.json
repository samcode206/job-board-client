{"ast":null,"code":"var _jsxFileName = \"/Users/sameem/Desktop/job-board-client/src/Nav/subcomponents/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Modal from '../../General/Modal';\nimport { validate } from 'email-validator';\nimport baseURL from '../../Server';\nimport AuthFieldContainer from './AuthStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register({\n  showRegister,\n  closeModal,\n  updateUser\n}) {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [emailExists, setEmailExists] = useState(false);\n  const [serverError, setServerError] = useState(false);\n  useEffect(() => {\n    if (showRegister === false) {\n      setEmail(\"\");\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setFirstName(\"\");\n      setLastName(\"\");\n      setEmailExists(false);\n      setServerError(false);\n    }\n  }, [showRegister]);\n\n  const changeHandler = e => {\n    const location = e.target.id;\n    const value = e.target.value;\n\n    switch (location) {\n      case \"email\":\n        setEmail(value);\n        break;\n\n      case \"password\":\n        setPassword(value);\n        break;\n\n      case \"fn\":\n        setFirstName(value);\n        break;\n\n      case \"ln\":\n        setLastName(value);\n        break;\n\n      default:\n        setConfirmPassword(value);\n        break;\n    }\n  };\n\n  const submitHandler = async e => {\n    try {\n      e.preventDefault();\n\n      if (validateInputs() === true) {\n        const res = await baseURL.post(\"/entry/register\", {\n          \"firstName\": firstName,\n          \"lastName\": lastName,\n          \"email\": email,\n          \"password\": password\n        });\n\n        if (res.status === 200) {\n          console.log(res.data.user.appliedJobs);\n          console.log(res.data.user.resume);\n          updateUser(\"in\", {\n            user: res.data.user.email,\n            token: res.data.token,\n            userId: res.data.user._id,\n            userDetails: {\n              appliedJobs: res.data.user.appliedJobs,\n              resume: res.data.user.resume\n            }\n          });\n          setEmailExists(false);\n          setServerError(false);\n          setEmail(\"\");\n          setPassword(\"\");\n          setConfirmPassword(\"\");\n          setLastName(\"\");\n          setFirstName(\"\");\n          closeModal();\n        }\n      }\n    } catch (err) {\n      if (err.response.status === 403) {\n        setEmailExists(true);\n      } else {\n        setServerError(true);\n      }\n    }\n  };\n\n  const cancelHandler = e => {\n    e.preventDefault();\n    setEmail(\"\");\n    setPassword(\"\");\n    setConfirmPassword(\"\");\n    setLastName(\"\");\n    setFirstName(\"\");\n    closeModal();\n  };\n\n  const validateInputs = () => {\n    if (firstName.length && lastName.length && validate(email) && password.length && password === confirmPassword) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    modalClassName: showRegister ? \"modal is-active\" : \"modal\",\n    closeModal: closeModal,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title is-4 has-text-centered\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form-register\",\n      style: AuthFieldContainer,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"First Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"First Name\",\n          id: \"fn\",\n          onChange: changeHandler,\n          value: firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"Last Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Last Name\",\n          id: \"ln\",\n          onChange: changeHandler,\n          value: lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Email\",\n          id: \"email\",\n          onChange: changeHandler,\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          placeholder: \"Password\",\n          id: \"password\",\n          onChange: changeHandler,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"Confirm Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          id: \"confirmPassword\",\n          onChange: changeHandler,\n          value: confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field is-grouped is-grouped-centered\",\n        children: [validateInputs() ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-link is-rounded is-outlined\",\n            onClick: submitHandler,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 39\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-link is-rounded is-outlined\",\n            disabled: true,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-danger is-outlined is-rounded\",\n            onClick: cancelHandler,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), serverError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"something went wrong please try again later!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }, this), emailExists && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Email already Exists please log in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Register, \"cczZWKT6TEKgDTlmVMwtcIPrXJw=\");\n\n_c = Register;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/sameem/Desktop/job-board-client/src/Nav/subcomponents/Register.js"],"names":["React","useEffect","useState","Modal","validate","baseURL","AuthFieldContainer","Register","showRegister","closeModal","updateUser","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","emailExists","setEmailExists","serverError","setServerError","changeHandler","e","location","target","id","value","submitHandler","preventDefault","validateInputs","res","post","status","console","log","data","user","appliedJobs","resume","token","userId","_id","userDetails","err","response","cancelHandler","length","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Modal from '../../General/Modal';\nimport {validate} from 'email-validator'; \nimport baseURL from '../../Server';\nimport AuthFieldContainer from './AuthStyle';\n\n\nexport default function Register({showRegister, closeModal, updateUser}){\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [firstName , setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\"); \n    const [emailExists, setEmailExists] = useState(false);\n    const [serverError, setServerError] = useState(false);\n\n    useEffect(()=>{\n        if (showRegister === false){\n            setEmail(\"\"); setPassword(\"\"); setConfirmPassword(\"\");\n            setFirstName(\"\"); setLastName(\"\"); setEmailExists(false); setServerError(false);\n        }\n    }, [showRegister])\n\n    const changeHandler = (e) => {\n        const location = e.target.id; \n        const value = e.target.value; \n        switch(location){\n            case \"email\": \n            setEmail(value); \n                break; \n            case \"password\":\n            setPassword(value);\n                break;\n            case \"fn\":\n                setFirstName(value);\n                break;\n            case \"ln\":\n                setLastName(value);  \n                break; \n            default:\n                setConfirmPassword(value);\n                break;\n        }\n    }; \n\n    const submitHandler = async (e) => {\n        try {\n        e.preventDefault();\n        if (validateInputs() === true){\n           const res = await baseURL.post(\"/entry/register\", {\n                \"firstName\": firstName, \n                \"lastName\" : lastName, \n                \"email\" : email, \n                \"password\" : password\n            });\n            if (res.status === 200){\n                console.log(res.data.user.appliedJobs);\n                console.log(res.data.user.resume);\n                updateUser(\"in\", \n                {\n                    user:res.data.user.email, \n                    token: res.data.token,\n                    userId: res.data.user._id,\n                    userDetails: {appliedJobs: res.data.user.appliedJobs, resume: res.data.user.resume}\n                });\n                setEmailExists(false);\n                setServerError(false);\n                setEmail(\"\");\n                setPassword(\"\");\n                setConfirmPassword(\"\");\n                setLastName(\"\");\n                setFirstName(\"\");\n                closeModal();\n            }\n        }\n        } \n        catch (err){\n            if (err.response.status === 403){\n                setEmailExists(true); \n            } else {\n                setServerError(true); \n            }\n        }\n    }; \n\n    const cancelHandler = (e) => {\n        e.preventDefault();\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setLastName(\"\");\n        setFirstName(\"\");\n        closeModal(); \n    };\n\n    const validateInputs = () => {\n        if (firstName.length && lastName.length && validate(email) && password.length && password === confirmPassword){\n            return true;\n        } else {\n            return false; \n        }\n    }\n\n    return <Modal modalClassName={showRegister ? \"modal is-active\" : \"modal\"} closeModal={closeModal}>\n        <h1 className=\"title is-4 has-text-centered\">Register</h1>\n\n        <form id=\"form-register\" style={AuthFieldContainer} onSubmit={submitHandler}>\n            \n        <label className=\"label\">\n            First Name\n            <input className=\"input\" type=\"text\" placeholder=\"First Name\" id=\"fn\" onChange={changeHandler} value={firstName}/>\n            </label>\n\n            <label className=\"label\">\n            Last Name\n            <input className=\"input\" type=\"text\" placeholder=\"Last Name\" id=\"ln\" onChange={changeHandler} value={lastName}/>\n            </label>\n\n            <label className=\"label\">\n            Email\n            <input className=\"input\" type=\"text\" placeholder=\"Email\" id=\"email\" onChange={changeHandler} value={email}/>\n            </label>\n            \n\n            <label className=\"label\">\n            Password\n            <input className=\"input\" type=\"password\" placeholder=\"Password\" id=\"password\" onChange={changeHandler} value={password}/>\n            </label>\n\n            <label className=\"label\">\n            Confirm Password\n            <input className=\"input\" type=\"password\" placeholder=\"Confirm Password\" id=\"confirmPassword\" onChange={changeHandler} value={confirmPassword}/>\n            </label>\n\n            <div className=\"field is-grouped is-grouped-centered\">\n                {\n                   validateInputs() ? <div className=\"control\">\n                   <button className=\"button is-link is-rounded is-outlined\" onClick={submitHandler}>Submit</button>\n                   </div>:\n                   <div className=\"control\">\n                   <button className=\"button is-link is-rounded is-outlined\" disabled>Submit</button>\n                   </div> \n                }\n\n                <div className=\"control\">\n                <button className=\"button is-danger is-outlined is-rounded\" onClick={cancelHandler}>Cancel</button>\n                </div>\n\n            </div>\n            {serverError && <p style={{color: \"red\"}}>something went wrong please try again later!</p>}\n            {emailExists && <p style={{color: \"red\"}}>Email already Exists please log in!</p>}\n\n        </form>\n    </Modal>\n}; \n\n\n"]},"metadata":{},"sourceType":"module"}