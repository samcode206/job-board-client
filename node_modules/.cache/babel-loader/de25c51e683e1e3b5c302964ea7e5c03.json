{"ast":null,"code":"var _jsxFileName = \"/Users/sameem/Desktop/job-board-client/src/components/Jobs/Jobs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SearchFields from './subcomponents/SearchFields';\nimport ResultJob from './subcomponents/ResultJob';\nimport JobDetails from './subcomponents/JobDetails';\nimport baseURL from '../../Server';\nimport Pagination from './subcomponents/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Jobs({\n  user\n}) {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [jobDetailsId, setJobDetailsId] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [lastPage, setLastPage] = useState(10);\n  const [awaitingServer, setAwaitingServer] = useState(true);\n\n  const jobDetailClickHandler = id => {\n    setJobDetailsId(id);\n    setTimeout(() => {\n      document.getElementById(\"start-of-job-detail\").scrollIntoView();\n    }, 250);\n  }; // useEffect(()=>{\n  //     (async function(){\n  //         try{\n  //          setAwaitingServer(true);\n  //          const response = await baseURL.get(`/jobs?page=${page}&limit=5`);\n  //          setAwaitingServer(false); \n  //          if (response.status === 200) {\n  //              setJobs(response.data.jobs);\n  //              setLastPage(response.data.pages[1]);\n  //         };\n  //         } catch(err){\n  //         }\n  //     })()\n  // }, [page]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchFields, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: jobDetailsId.length > 0 ? \"container-for-jobs\" : \"container-for-jobs-altr\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-job-results\",\n        children: awaitingServer ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n            class: \"progress is-danger\",\n            max: \"100\",\n            children: \"30%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), jobDetailsId.length >= 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-single-job\",\n        children: /*#__PURE__*/_jsxDEV(JobDetails, {\n          jobId: jobDetailsId,\n          cancelDetails: () => {\n            setJobDetailsId(\"\");\n          },\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-single-job\",\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Jobs, \"BUb6PGPwsYbN1FpmMyD9eTHEfic=\");\n\n_c = Jobs;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"sources":["/Users/sameem/Desktop/job-board-client/src/components/Jobs/Jobs.js"],"names":["React","useState","useEffect","SearchFields","ResultJob","JobDetails","baseURL","Pagination","Jobs","user","jobs","setJobs","jobDetailsId","setJobDetailsId","page","setPage","lastPage","setLastPage","awaitingServer","setAwaitingServer","jobDetailClickHandler","id","setTimeout","document","getElementById","scrollIntoView","length","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAGA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAqB;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,IAAD,CAApD;;AAEA,QAAMmB,qBAAqB,GAAIC,EAAD,IAAQ;AAClCR,IAAAA,eAAe,CAACQ,EAAD,CAAf;AACAC,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CC,cAA/C;AACH,KAFS,EAEP,GAFO,CAAV;AAGH,GALD,CARgC,CAehC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AAIA,sBACA;AAAA,4BACG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADH,eAEI;AAAA,6BAAK;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAK,MAAA,SAAS,EAAEb,YAAY,CAACc,MAAb,GAAsB,CAAtB,GAA0B,oBAA1B,GAAiD,yBAAjE;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,kBAGQR,cAAc,gBAAG;AAAA,kCACb;AAAA;AAAA;AAAA;AAAA,kBADa,eAEjB;AAAU,YAAA,KAAK,EAAC,oBAAhB;AAAqC,YAAA,GAAG,EAAC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFiB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAIZ;AAAA;AAAA;AAAA;AAAA;AAPV;AAAA;AAAA;AAAA;AAAA,cADJ,EA6BON,YAAY,CAACc,MAAb,IAAuB,CAAvB,gBACA;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACC,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEd,YAAnB;AAAiC,UAAA,aAAa,EAAE,MAAI;AAACC,YAAAA,eAAe,CAAC,EAAD,CAAf;AAAoB,WAAzE;AAA2E,UAAA,IAAI,EAAEJ;AAAjF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADA,gBAGA;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAsC,QAAA,KAAK,EAAE;AAACkB,UAAAA,OAAO,EAAC;AAAT;AAA7C;AAAA;AAAA;AAAA;AAAA,cAhCP;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA0CF;;GA5EsBnB,I;;KAAAA,I;AA4EtB","sourcesContent":["import React,{useState, useEffect} from 'react'; \nimport SearchFields from './subcomponents/SearchFields';\nimport ResultJob from './subcomponents/ResultJob';\nimport JobDetails from './subcomponents/JobDetails';\nimport baseURL from '../../Server';\nimport Pagination from './subcomponents/Pagination'; \n\n\nexport default function Jobs({user}){\n    const [jobs, setJobs] = useState([]);\n    const [jobDetailsId, setJobDetailsId] = useState(\"\");\n    const [page, setPage] = useState(1); \n    const [lastPage, setLastPage] = useState(10); \n\n    const [awaitingServer, setAwaitingServer] = useState(true); \n\n    const jobDetailClickHandler = (id) => {\n        setJobDetailsId(id); \n        setTimeout(() => {\n            document.getElementById(\"start-of-job-detail\").scrollIntoView();    \n        }, 250);\n    }; \n\n    // useEffect(()=>{\n    //     (async function(){\n    //         try{\n    //          setAwaitingServer(true);\n    //          const response = await baseURL.get(`/jobs?page=${page}&limit=5`);\n    //          setAwaitingServer(false); \n    //          if (response.status === 200) {\n    //              setJobs(response.data.jobs);\n    //              setLastPage(response.data.pages[1]);\n                \n    //         };\n    //         } catch(err){\n                \n    //         }\n    //     })()\n    // }, [page]);\n\n   \n\n    return (\n    <div>\n       <SearchFields />\n        <div><hr></hr></div>\n\n        <div className={jobDetailsId.length > 0 ? \"container-for-jobs\" : \"container-for-jobs-altr\"}>\n            <div className=\"container-job-results\">\n\n                {\n                    awaitingServer ? <div>\n                        <div></div>\n                    <progress class=\"progress is-danger\" max=\"100\">30%</progress>\n                    </div> \n                    : <div>\n\n                    </div>\n                }\n\n                {/* {jobs.map((job)=>{\n                    return <ResultJob key={job._id} \n                    companyName={job.companyName} salaryRange={job.salaryRange}\n                    jobTitle={job.jobTitle} requiredSkills={job.requiredSkills} \n                    jobId={job._id} jobResponsibility={job.jobResponsibility} \n                    jobDetailClickHandler={jobDetailClickHandler}/>; \n                })}\n                {\n                    jobs.length ? <Pagination page={page} lastPage={lastPage} \n                    changePage={(pageNum)=>{setPage(pageNum)}}/>  : null\n                } */}\n\n            </div>\n                \n            \n        \n              {jobDetailsId.length >= 1 ?\n               <div className=\"container-single-job\" >\n                <JobDetails jobId={jobDetailsId} cancelDetails={()=>{setJobDetailsId(\"\")}} user={user}/></div> :\n               <div className=\"container-single-job\" style={{display:\"none\"}}></div> }  \n          \n               \n        </div>\n    </div>\n)};"]},"metadata":{},"sourceType":"module"}