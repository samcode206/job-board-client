[{"/Users/sameem/Desktop/job-board-client/src/index.js":"1","/Users/sameem/Desktop/job-board-client/src/App.js":"2","/Users/sameem/Desktop/job-board-client/src/Nav/Nav.js":"3","/Users/sameem/Desktop/job-board-client/src/Home/Home.js":"4","/Users/sameem/Desktop/job-board-client/src/components/Account/Account.js":"5","/Users/sameem/Desktop/job-board-client/src/components/Jobs/Jobs.js":"6","/Users/sameem/Desktop/job-board-client/src/Nav/subcomponents/Register.js":"7","/Users/sameem/Desktop/job-board-client/src/Nav/subcomponents/Login.js":"8","/Users/sameem/Desktop/job-board-client/src/Nav/subcomponents/Burger.js":"9","/Users/sameem/Desktop/job-board-client/src/Server.js":"10","/Users/sameem/Desktop/job-board-client/src/components/Jobs/subcomponents/ResultJob.js":"11","/Users/sameem/Desktop/job-board-client/src/components/Jobs/subcomponents/SearchFields.js":"12","/Users/sameem/Desktop/job-board-client/src/components/Jobs/subcomponents/JobDetails.js":"13","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/Unauthorized.js":"14","/Users/sameem/Desktop/job-board-client/src/components/Jobs/subcomponents/Pagination.js":"15","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/User.js":"16","/Users/sameem/Desktop/job-board-client/src/Nav/subcomponents/AuthStyle.js":"17","/Users/sameem/Desktop/job-board-client/src/General/Modal.js":"18","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/Tabs.js":"19","/Users/sameem/Desktop/job-board-client/src/components/Jobs/subcomponents/helpers/displaySalary.js":"20","/Users/sameem/Desktop/job-board-client/src/components/Jobs/subcomponents/helpers/fillArray.js":"21","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/Resume.js":"22","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/Account.js":"23","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/Recruiter.js":"24","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/Jobs.js":"25","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/Skills.js":"26","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/Edu.js":"27","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/Certs.js":"28","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/useToggle.js":"29","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/WorkExp.js":"30","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/allskills.js":"31","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/SalaryRange.js":"32","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/ResponsiblityModal.js":"33","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/Skills.js":"34","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/RecruiterViewJobs/ViewPostings.js":"35","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/allResponsibilities.js":"36","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/preMadeJobRes.js":"37","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/sub/EmptyWarn.js":"38"},{"size":156,"mtime":1621292418995,"results":"39","hashOfConfig":"40"},{"size":1860,"mtime":1621292418992,"results":"41","hashOfConfig":"40"},{"size":2210,"mtime":1621292418992,"results":"42","hashOfConfig":"40"},{"size":8913,"mtime":1621292418992,"results":"43","hashOfConfig":"40"},{"size":884,"mtime":1621292418993,"results":"44","hashOfConfig":"40"},{"size":2877,"mtime":1621293026051,"results":"45","hashOfConfig":"40"},{"size":5570,"mtime":1621292418992,"results":"46","hashOfConfig":"40"},{"size":3584,"mtime":1621292418992,"results":"47","hashOfConfig":"40"},{"size":931,"mtime":1621292418992,"results":"48","hashOfConfig":"40"},{"size":146,"mtime":1621292418992,"results":"49","hashOfConfig":"40"},{"size":1482,"mtime":1621292418995,"results":"50","hashOfConfig":"40"},{"size":986,"mtime":1621292418995,"results":"51","hashOfConfig":"40"},{"size":5708,"mtime":1621292418995,"results":"52","hashOfConfig":"40"},{"size":164,"mtime":1621292418993,"results":"53","hashOfConfig":"40"},{"size":1295,"mtime":1621292418995,"results":"54","hashOfConfig":"40"},{"size":1347,"mtime":1621292418993,"results":"55","hashOfConfig":"40"},{"size":139,"mtime":1621292418992,"results":"56","hashOfConfig":"40"},{"size":560,"mtime":1621292418992,"results":"57","hashOfConfig":"40"},{"size":470,"mtime":1621292418993,"results":"58","hashOfConfig":"40"},{"size":408,"mtime":1621292418995,"results":"59","hashOfConfig":"40"},{"size":153,"mtime":1621292418995,"results":"60","hashOfConfig":"40"},{"size":5287,"mtime":1621292418994,"results":"61","hashOfConfig":"40"},{"size":9372,"mtime":1621292418994,"results":"62","hashOfConfig":"40"},{"size":5061,"mtime":1621292418994,"results":"63","hashOfConfig":"40"},{"size":1744,"mtime":1621292418994,"results":"64","hashOfConfig":"40"},{"size":2638,"mtime":1621292418994,"results":"65","hashOfConfig":"40"},{"size":6888,"mtime":1621292418994,"results":"66","hashOfConfig":"40"},{"size":3360,"mtime":1621292418994,"results":"67","hashOfConfig":"40"},{"size":870,"mtime":1621292418995,"results":"68","hashOfConfig":"40"},{"size":5376,"mtime":1621292418995,"results":"69","hashOfConfig":"40"},{"size":1347,"mtime":1621292418994,"results":"70","hashOfConfig":"40"},{"size":4699,"mtime":1621292418994,"results":"71","hashOfConfig":"40"},{"size":5676,"mtime":1621292418994,"results":"72","hashOfConfig":"40"},{"size":2870,"mtime":1621292418994,"results":"73","hashOfConfig":"40"},{"size":3694,"mtime":1621292418994,"results":"74","hashOfConfig":"40"},{"size":2335,"mtime":1621292418994,"results":"75","hashOfConfig":"40"},{"size":3003,"mtime":1621292418994,"results":"76","hashOfConfig":"40"},{"size":226,"mtime":1621292418995,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tv0hn7",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sameem/Desktop/job-board-client/src/index.js",[],"/Users/sameem/Desktop/job-board-client/src/App.js",[],"/Users/sameem/Desktop/job-board-client/src/Nav/Nav.js",[],"/Users/sameem/Desktop/job-board-client/src/Home/Home.js",["163","164","165","166"],"import React from \"react\";\nimport remote from '../assets/remote.svg';\nimport { motion } from \"framer-motion\";\nimport {useHistory} from 'react-router-dom';\nimport fast from '../assets/fast.svg';\nimport track from '../assets/track.svg';\nimport getJob from '../assets/getjob.svg'; \n\nexport default function Home(){\n    const history = useHistory();\n    const variantsImage = {\n        hidden: {\n            x: 1000,\n            scale: 0\n        },\n        visible: {\n            x: 0,\n            scale: 1,\n            transition: {duration: 0.7}\n        }\n    }\n\n    return <div>\n        <div className=\"columns\">\n        <div className=\"column\">\n            <div className=\"section is-medium\">\n                <h1 className=\"title is-2\">Find Your dream Tech Job & work from Home With Remoti<span className=\"has-text-link\">fy</span></h1>\n                <h2 className=\"subtitle is-4 mt-1\">We help developers & tech enthusiasts find their dream remote jobs, we will help you find yours!</h2>\n                    <nav className=\"level\">\n                    <div className=\"level-item has-text-centered is-flex is-flex-direction-column\">\n                            <p className=\"heading\">Engineers Served</p>\n                            <p className=\"title\">92,414</p>     \n                    </div>   \n                    </nav>\n                <div className=\"field is-grouped is-grouped-centered\">\n                    <div className=\"control\">\n                        <button className=\"button is-link\">\n                            Find Your Dream Job!\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <motion.div initial=\"hidden\" animate=\"visible\" variants={variantsImage}  className=\"column is-three-fifths\" >\n            <figure className=\"image is-fullwidth is-1by1\">\n            <img src={remote}></img>\n            </figure>\n        </motion.div>\n \n\n    </div>\n       <hr className=\"has-background-link-light\"/>\n\n        <div className=\"container\">\n        <div className=\"columns\">\n            <div className=\"column\">\n                <div className=\"box\">\n                    <h3 className=\"title is-6 has-text-centered\">Front-End Jobs</h3>\n                    <hr className=\"has-background-link-light\"/>\n                    <section className=\"container\">\n                        <p>\n                        wether you have one or 10 years of experience of front end development we will help you find \n                        a client that will be suited to your skill & compensation requirments. We have helped over 30,000 \n                        front end developers find their dream jobs already. Join Them!\n                        </p>\n                       <div className=\"field is-grouped is-grouped-centered mt-2\">\n                        <div className=\"control\" onClick={()=>history.push(\"/jobs\")}>\n                            <button className=\"button is-link is-light\">\n                                Explore Front-End Jobs\n                            </button>\n                        </div>\n                       </div>\n                    </section>\n                </div>\n            </div>\n            <div className=\"column\">\n                <div className=\"box\">\n                    <h3 className=\"title is-6 has-text-centered\">Back-End Jobs</h3>\n                    <hr className=\"has-background-link-light\"/>\n                    <section className=\"container\">\n                        <p>\n                        Backend Development is in high demand right now. If you are a student in college looking for an internship with Java knowledge,\n                        or a bootcamp graduate with NodeJs experience, we have helped many developers establish a succesful career as backend engineers\n                        </p>\n                       <div className=\"field is-grouped is-grouped-centered mt-2\">\n                        <div className=\"control\" onClick={()=>history.push(\"/jobs\")}>\n                            <button className=\"button is-link is-light\">\n                                Explore Back-End Jobs\n                            </button>\n                        </div>\n                       </div>\n                    </section>\n                </div>\n            </div>\n            <div className=\"column\">\n                <div className=\"box\">\n                    <h3 className=\"title is-6 has-text-centered\">Cloud Architect Jobs</h3>\n                    <hr className=\"has-background-link-light\"/>\n                    <section className=\"container\">\n                        <p>\n                        The Cloud is the biggest trend, & not only is it a trend but its here to stay, we have helped over 25,000 cloud developers \n                        find their dream Cloud Architect jobs. Wether you are familiar with Azure, Google Cloud or AWS, we got your back! \n                        </p>\n                       <div className=\"field is-grouped is-grouped-centered mt-2\">\n                        <div className=\"control\" onClick={()=>history.push(\"/jobs\")}>\n                            <button className=\"button is-link is-light\">\n                                Explore Cloud Architect Jobs\n                            </button>\n                        </div>\n                       </div>\n                    </section>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    \n    <h1 className=\"title has-text-centered is-3 mt-5\">Features</h1>\n    \n    <section className=\"container\">\n\n        <div className=\"columns\">\n            <div className=\"column\">\n                <div className=\"section is-large\">\n                    <h1 className=\"title\">We Respect Your Time!</h1>\n                <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Itaque, provident eius! Maiores sequi nisi sapiente odio facilis, dicta explicabo nostrum, placeat nam excepturi illum nobis cupiditate provident illo rerum exercitationem quia officia sunt atque vitae unde! At sit minus facilis ea velit dolores impedit non dolore animi voluptatibus illum incidunt debitis, molestias ipsum quia? A vel harum ipsam debitis velit modi ex in vitae omnis, at necessitatibus quo deleniti nemo nihil doloribus, sed aut magni soluta!\n                </p>\n                </div>\n            </div>\n            <div className=\"column\">\n                <figure className=\"image is-fullwidth is-1by1\">\n                <img src={fast}></img>\n                </figure>\n            </div>\n        </div>\n\n        <div className=\"columns\">\n        <div className=\"column\">\n                <div className=\"section is-large\">\n                    <h1 className=\"title\">Track Your Journey!</h1>\n                <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Itaque, provident eius! Maiores sequi nisi sapiente odio facilis, dicta explicabo nostrum, placeat nam excepturi illum nobis cupiditate provident illo rerum exercitationem quia officia sunt atque vitae unde! At sit minus facilis ea velit dolores impedit non dolore animi voluptatibus illum incidunt debitis, molestias ipsum quia? A vel harum ipsam debitis velit modi ex in vitae omnis, at necessitatibus quo deleniti nemo nihil doloribus, sed aut magni soluta!\n                </p>\n                </div>\n            </div>\n            <div className=\"column\">\n                <figure className=\"image is-fullwidth is-1by1\">\n                <img src={track}></img>\n                </figure>\n            </div>\n        </div>\n\n        <div className=\"columns\">\n        <div className=\"column\">\n                <div className=\"section is-large\">\n                    <h1 className=\"title\">In The End, You Win!</h1>\n                <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Itaque, provident eius! Maiores sequi nisi sapiente odio facilis, dicta explicabo nostrum, placeat nam excepturi illum nobis cupiditate provident illo rerum exercitationem quia officia sunt atque vitae unde! At sit minus facilis ea velit dolores impedit non dolore animi voluptatibus illum incidunt debitis, molestias ipsum quia? A vel harum ipsam debitis velit modi ex in vitae omnis, at necessitatibus quo deleniti nemo nihil doloribus, sed aut magni soluta!\n                </p>\n                </div>\n            </div>\n            <div className=\"column\">\n                <figure className=\"image is-fullwidth is-1by1\">\n                <img src={getJob}></img>\n                </figure>\n            </div>\n        </div>\n\n    </section>\n\n\n    <footer class=\"footer\">\n        <div class=\"content has-text-centered\">\n            <p>\n            <a href=\"https://storyset.com/business\">Illustration by Freepik Storyset</a>\n            </p>\n        </div>\n    </footer>\n\n</div>\n};\n\n// <a href=\"https://storyset.com/business\">Illustration by Freepik Storyset</a>","/Users/sameem/Desktop/job-board-client/src/components/Account/Account.js",["167"],"import React, { useEffect, useState } from 'react'; \nimport Unauthorized from './subcomponents/Unauthorized';\nimport User from './subcomponents/User';\n\nexport default function Account(){\n    const [userEmail, setUserEmail] = useState(\"\");\n    const [token, setUserToken] = useState(\"\");\n    const [forbidden, setForbidden] = useState(false);\n\n    useEffect(()=>{\n        if (localStorage.getItem(\"user\") && localStorage.getItem(\"token\")){\n            setUserEmail(localStorage.getItem(\"user\"));\n            setUserToken(localStorage.getItem(\"token\"));  \n            setForbidden(false);   \n        } \n        else {\n           setForbidden(true); \n        }\n    },[setForbidden, setUserEmail, setUserToken]);\n\n    return <div className=\"container-for-account\">\n        {\n            !forbidden ? <User userEmail={userEmail} /> : \n            <Unauthorized />\n        }\n\n    </div>\n}; ","/Users/sameem/Desktop/job-board-client/src/components/Jobs/Jobs.js",[],"/Users/sameem/Desktop/job-board-client/src/Nav/subcomponents/Register.js",[],"/Users/sameem/Desktop/job-board-client/src/Nav/subcomponents/Login.js",[],"/Users/sameem/Desktop/job-board-client/src/Nav/subcomponents/Burger.js",[],"/Users/sameem/Desktop/job-board-client/src/Server.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Jobs/subcomponents/ResultJob.js",[],["168","169"],"/Users/sameem/Desktop/job-board-client/src/components/Jobs/subcomponents/SearchFields.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Jobs/subcomponents/JobDetails.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/Unauthorized.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Jobs/subcomponents/Pagination.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/User.js",[],"/Users/sameem/Desktop/job-board-client/src/Nav/subcomponents/AuthStyle.js",[],"/Users/sameem/Desktop/job-board-client/src/General/Modal.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/Tabs.js",["170"],"import React from 'react'; \n\n\nexport default function Tabs({catalog, catalogActiveHandler}){\n\n    \n    return <div className=\"tabs is-centered\">\n        <ul>\n            {\n                Object.keys(catalog).map((name) => {\n                    return <li key={name} className={catalog[name] === true? \"is-active\" : \"\"}><a onClick={()=>{catalogActiveHandler(name, catalog[name])}}>{name}</a></li>\n                })\n            }\n            \n        </ul>\n    </div>;\n}","/Users/sameem/Desktop/job-board-client/src/components/Jobs/subcomponents/helpers/displaySalary.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Jobs/subcomponents/helpers/fillArray.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/Resume.js",["171"],"import React, {useState, useEffect} from 'react';\nimport Skills from './resumeHelpers/Skills';\nimport Certs from './resumeHelpers/Certs';\nimport Edu from './resumeHelpers/Edu';\nimport WorkExp from './resumeHelpers/WorkExp';\nimport baseURL from '../../../../Server';\nimport {useToggle} from './resumeHelpers/useToggle';\n\n\n/*\n   `skills: {type: Array}, \n    education: {type: Array},\n    experience: {type: Array}, \n    certifications: {type : Array},\n    summary: {type: String, default: \"\"}\n*/\n\nexport default function Resume(){\n    const [activeSkills, activeEdu, activeCerts, activeWEXP, toggleHandler] = useToggle();\n\n    const [skills, setSkills] = useState([]);\n    const [certs, setCerts] = useState([]);\n    const [edu, setEdu] = useState([]);\n    const [wxp, setWxp] = useState([]);\n    const [summary, setSummary] = useState(\"\");\n    const [isSuccess, setIsSuccess] = useState(false);\n    const [isError, setIsError] = useState(false); \n\n    useEffect(()=>{\n        (async ()=>{\n            const { data: {resume} } = await baseURL.get(`/user/${localStorage.getItem(\"userId\")}`)\n            console.log(resume)\n            setSkills(resume.skills);\n            setCerts(resume.certifications);\n            setEdu(resume.education);\n            setWxp(resume.experience);\n            setSummary(resume.summary);\n        })()\n     }, []);\n\n     const updateResume = async () => {\n         try{\n            const response = await baseURL.patch(\"/app/resume\", {\n                skills,\n                certifications : certs,\n                education : edu,\n                experience: wxp,\n                id: localStorage.getItem(\"userId\")\n             });\n             if (response.status === 200){\n                 setIsSuccess(true);\n                setTimeout(()=>{\n                    setIsSuccess(false);\n                }, 3000)\n             } \n         } catch(err){\n            console.log(err.response); \n            setIsError(true);\n            setTimeout(()=>{\n                setIsError(false);\n            }, 6000)\n         }\n        \n     } \n\n    return (\n    <div className=\"container\">\n      { isSuccess &&  <div className=\"notification is-success has-text-centered\">Your change was successfully proccessed!</div>}\n      { isError &&  <div className=\"notification is-danger has-text-centered\">Something went wrong while proccessing your request please retry!</div>}\n        <div className=\"columns\">\n            <div className=\"column\">\n                    <div className=\"box\">\n                        <div id=\"skills\" onClick={(e)=>toggleHandler(e)} className=\"is-flex is-justify-content-space-between is-clickable is-align-items-center\">\n                            <p id=\"skills\" className=\"has-text-weight-bold is-size-4\">Skills</p>\n                            {activeSkills ?  <i id=\"skills\" className=\"fas fa-arrow-up\"></i> :\n                              <i id=\"skills\" className=\"fas fa-arrow-down\"></i>}\n                        </div> \n                        {activeSkills ? <Skills updateResume={updateResume} skills={[skills, setSkills]}/> : null}\n                    </div>\n                </div>\n\n                <div className=\"column\">\n                    <div className=\"box\">\n                        <div id=\"edu\" onClick={(e)=>toggleHandler(e)} className=\"is-flex is-justify-content-space-between is-clickable is-align-items-center\">\n                            <p id=\"edu\" className=\"has-text-weight-bold is-size-4\">Education</p>\n                            {activeEdu ?  <i id=\"edu\" className=\"fas fa-arrow-up\"></i> :  <i id=\"edu\" className=\"fas fa-arrow-down\"></i>}\n                        </div> \n                        {activeEdu ? <Edu updateResume={updateResume} education={[edu, setEdu]}/> : null}\n                    </div>\n                </div>\n            \n        </div>\n\n\n        <div className=\"columns\">\n            <div className=\"column\">\n                    <div className=\"box\">\n                        <div id=\"certs\" onClick={(e)=>toggleHandler(e)} className=\"is-flex is-justify-content-space-between is-clickable is-align-items-center\">\n                            <p id=\"certs\" className=\"has-text-weight-bold is-size-4\">Certifications</p>\n                            {activeCerts?  <i id=\"certs\" className=\"fas fa-arrow-up\"></i> :  <i id=\"certs\" className=\"fas fa-arrow-down\"></i>}\n                        </div> \n                        {activeCerts ? <Certs  updateResume={updateResume} certifications={[certs, setCerts]}/> : null}\n                    </div>\n                </div>\n\n                <div className=\"column\">\n                    <div className=\"box\">\n                        <div id=\"wexp\" onClick={(e)=>toggleHandler(e)} className=\"is-flex is-justify-content-space-between is-clickable is-align-items-center\">\n                            <p id=\"wexp\" className=\"has-text-weight-bold is-size-4\">Work Experience</p>\n                            {activeWEXP ?  <i id=\"wexp\" className=\"fas fa-arrow-up\"></i> :  <i id=\"wexp\" className=\"fas fa-arrow-down\"></i>}\n                        </div> \n                        {activeWEXP ? <WorkExp  updateResume={updateResume} experience={[wxp, setWxp]}/> : null}\n                    </div>\n                </div>\n\n        </div>\n\n    </div>\n       \n    )\n}; \n\n","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/Account.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/Recruiter.js",["172","173"],"import React, { useState } from 'react';\nimport Skills from './newJob/Skills';\nimport {allSkills} from './newJob/allskills';\nimport SalaryRange from './newJob/SalaryRange';\nimport {allRessponsibilities} from './newJob/allResponsibilities';\nimport ResponsibilityModal from './newJob/ResponsiblityModal';\nimport baseURL from '../../../../Server';\nimport {useHistory} from 'react-router-dom';\nimport ViewPostings from '../useractions/RecruiterViewJobs/ViewPostings';\n\nexport default function Recruiter(){\n    const history = useHistory();\n    const [salaryRange, setSalaryRange] = useState({yearly: true, range: \"\"}); \n    const [reqSkills, setReqSkills] = useState([]);\n    const [prefSkills, setPrefSkills] = useState([]);\n\n    const [title, setTitle] = useState(\"\");\n    const [companyName, setCompanyName] = useState(\"\"); \n    const [summary, setSummary] = useState(\"\"); \n\n    const [responsiblities, setResponsibilites] = useState([]);\n    \n    const [isCreatePost, setIsCreatePost] = useState(true);\n \n\n    const submitHandler = async () => {\n        if (salaryRange && title.length && companyName.length && summary.length && reqSkills.length && responsiblities.length){\n            const rs = reqSkills.filter(({selected}) => selected === true).map(({name}) => name);\n            const ps = prefSkills.filter(({selected}) => selected === true).map(({name}) => name);\n            const newJob = {\n                jobTitle: title,\n                salaryRange: salaryRange.range,\n                jobDescription: summary,\n                requiredSkills: rs,\n                preferredSkills: ps,\n                companyName: companyName,\n                jobResponsibility: responsiblities,\n                email : localStorage.getItem(\"user\")\n            }; \n            const res = await baseURL.post(\"/jobs\", newJob);\n            if (res.status === 201){\n                history.push(\"/jobs\");\n            }\n        }\n    };\n\n    const cancelHandler = () => {\n        setSalaryRange({yearly: true, range: \"\"});\n        setReqSkills([]);\n        setPrefSkills([]);\n        setTitle(\"\");\n        setCompanyName(\"\");\n        setSummary(\"\");\n        setResponsibilites([]);\n    }; \n\n    return (\n        <section>\n            <div className=\"container\">\n            <nav className=\"breadcrumb is-right\">\n                <ul>\n                    <li className={isCreatePost && \"is-active\"}><a onClick={()=>setIsCreatePost(!isCreatePost)}>\n                        Create Posting<span className=\"icon is-small\"><i className=\"fas fa-plus-circle\"></i></span></a> \n                    </li>\n                    <li className={!isCreatePost && \"is-active\"}><a onClick={()=>setIsCreatePost(!isCreatePost)}>\n                        View Postings <span className=\"icon is-small\"><i className=\"fas fa-desktop\"></i>\n                    </span></a></li>\n                </ul>\n            </nav>\n\n            {\n                !isCreatePost ? <ViewPostings /> : \n                <>\n                          <div className=\"field\">\n            <label className=\"label\">Job Title</label>\n            <div className=\"control\">\n                <input className=\"input\" value={title} onChange={(e)=> setTitle(e.target.value)} placeholder=\"Enter Job Title...\"></input>\n            </div>\n            </div>\n\n            <div className=\"field\">\n            <label className=\"label\">Company Name</label>\n            <div className=\"control\">\n                <input className=\"input\" value={companyName} onChange={(e)=>setCompanyName(e.target.value)} placeholder=\"Enter Company Name...\"></input>\n            </div>\n            </div>\n\n         \n            \n            <SalaryRange setSalaryRange={setSalaryRange}/>\n\n            <Skills allSkills={allSkills} label=\"Required Skills\" skillHandler={setReqSkills}/>\n            {\n                reqSkills.filter(({selected}) => selected === true).length >= 1 ? \n                <Skills allSkills={allSkills} label=\"Preffered Skills\" skillHandler={setPrefSkills}/> : null\n            }\n            \n            <ResponsibilityModal ackRes={setResponsibilites} allRessponsibilities={allRessponsibilities}/>\n\n            <div className=\"field\">\n                <div className=\"control\">\n                <label className=\"label mt-3\">Job Summary</label>\n                <textarea value={summary} onChange={(e)=> setSummary(e.target.value)} \n                className=\"textarea is-link\" placeholder=\"please enter a job summary describing the job and company (minimum 25 characters)\">\n                </textarea>\n                </div>\n            </div>\n\n            <div className=\"field is-grouped\">\n                <div className=\"control\">\n                    <button className=\"button is-link\" onClick={submitHandler}>Submit</button>\n                </div>\n                <div className=\"control\">\n                    <button className=\"button is-link is-light\" onClick={cancelHandler}>Cancel</button>\n                </div>\n            </div>\n                </>\n            }\n\n      \n\n            </div>\n        </section>\n    )\n}; \n\n","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/Jobs.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/Skills.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/Edu.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/Certs.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/useToggle.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/WorkExp.js",["174"],"import React, { useState } from 'react';\nimport EmptyWarn from './sub/EmptyWarn';\nimport DatePicker from 'react-date-picker'; \nimport {nanoid} from 'nanoid';\n\nexport default function WorkEXP({experience, updateResume}){\n    const [experienceList, setExperiencelist] = experience; \n    const [startdate, setStartdate] = useState(null);\n    const [enddate, setEnddate] = useState(null);\n    const [currEmployed, setCurrEmployed] = useState(true); \n    const [addMode, setAddMode] = useState(false); \n\n    // input states \n    const [position, setPosition] = useState(\"\");\n    const [companyName, setCompanyName] = useState(\"\");\n\n    const addHandler = () => {\n        const newExp = {\n            id: nanoid(),\n            position: position,\n            companyName: companyName,\n            startDate: dateFormatter(startdate), \n            currentlyEmployed: currEmployed,\n            endDate: enddate ? dateFormatter(enddate) : null \n        };\n        const newExpList = [...experienceList]; \n        newExpList.push(newExp);\n        setExperiencelist(newExpList);\n        setPosition(\"\");\n        setCompanyName(\"\");\n        setStartdate(null);\n        setEnddate(null); \n        setCurrEmployed(true);\n        setAddMode(!addMode);\n    }; \n\n    const deleteHandler = (identifier) => {\n        const newEXps = [...experienceList].filter(({id})=> id !== identifier);\n        setExperiencelist(newEXps);\n    }; \n\n    const submitHandler = () => {\n\n    }; \n\n    const renderExpList = () => {\n        return experienceList.map(({position, companyName, startDate, currentlyEmployed, endDate, id})=> {\n            return <div className=\"box\" key={id}>\n                <div className=\"is-flex is-flex-direction-row-reverse\"><div><span className=\"icon is-small\"><i id={id} \n                onClick={()=>deleteHandler(id)} className=\"far fa-trash-alt is-clickable\"></i></span></div></div>\n                <p><strong>Position: </strong>{position}</p>\n                <p><strong>Company Name: </strong>{companyName}</p>\n                <p><strong>Start Date: </strong>{startDate}</p>\n                {\n                    !currentlyEmployed && <o><strong>End Date: </strong>{endDate}</o>\n                }\n\n            </div>\n        })\n    };\n\n    const dateFormatter = (date) =>{\n        return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`\n    };\n\n    return <div className=\"container\">\n        <div>\n            {\n                experienceList.length ? <> {renderExpList()} </>: <EmptyWarn>Your experience section is empty fill with either work experience or Projects!</EmptyWarn>\n            }\n        </div>\n            \n            {addMode ? (\n           <>\n           <div className=\"field mt-3\">\n               <div className=\"control\">\n                <label className=\"label\">Position:</label>\n                   <input className=\"input\" placeholder=\"Enter Your Title\" value={position} onChange={(e)=> setPosition(e.target.value)}/>\n               </div>\n           </div>\n           \n           <div className=\"field\">\n               <label className=\"label\">Company Name:</label>\n               <div className=\"control\">\n                   <input className=\"input\" placeholder=\"Enter company or project name\" value={companyName} onChange={(e)=> setCompanyName(e.target.value)}/>\n               </div>\n           </div>\n   \n   \n           <div className=\"field\">\n               <div className=\"control\">\n                   <label className=\"label\">Start Date:</label>\n                   <DatePicker value={startdate} onChange={setStartdate} className=\"input\" />\n               </div>\n   \n               <div className=\"control mt-3\" onChange={(e) => setCurrEmployed(e.target.value === \"1\")}>\n                   <label className=\"label\">Currently Employed:</label>\n                   <label className=\"radio\">\n                       <input type=\"radio\" name=\"curr\" defaultChecked value=\"1\"/>\n                       Yes\n                   </label>\n                   <label className=\"radio\">\n                       <input type=\"radio\" name=\"curr\" value=\"0\"/>\n                       No\n                   </label>\n               </div>\n               \n             {\n                !currEmployed ?  <div className=\"control mt-2\">\n                <label className=\"label\">End Date:</label>\n                    <DatePicker value={enddate} onChange={setEnddate} className=\"input\"/>\n                </div> : null \n             }  \n       \n               </div>\n               </>\n\n            ) : null}\n\n          \n        {\n            position.length > 3 && companyName.length > 3 && startdate && (currEmployed || enddate) ?\n             <div className=\"field\">\n                 <div className=\"control\">\n                     <button className=\"button is-link is-light\" onClick={addHandler}>Add</button>\n                </div>\n             </div> : null \n        } \n\n          <hr />\n          <div className=\"field is-grouped is-grouped-centered\">\n                <div className=\"control\">\n                    <button className=\"button is-link\" onClick={updateResume}>Save Skills</button>\n                </div>\n                <div className=\"control\">\n                    <button className=\"button\" onClick={()=> {setAddMode(!addMode)}}> {addMode ? \"Close Editor\" : \"Edit Experience\" }</button>\n                </div>\n          </div>\n    </div>\n}\n\n\n","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/allskills.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/SalaryRange.js",["175","176","177"],"import React, {useState} from 'react';\n\n\n\nexport default function SalaryRange({setSalaryRange}){\n    const salaryType = {\n        yearly: \"$ / Year\",\n        hourly: \"$ / Hour\"\n    }\n    const [yearly, setYearly] = useState(true);\n    const [salaryFrom, setSalaryFrom] = useState(\"\");\n    const [salaryTo, setSalaryTo] = useState(\"\");\n\n    const salaryTypeHandler = (e) =>{\n        if (e.target.value === \"hourly\"){\n         setYearly(false);\n         if (salaryFrom.includes(salaryType.yearly)) setSalaryFrom(salaryFrom.replace(salaryType.yearly, salaryType.hourly));\n         if (salaryTo.includes(salaryType.yearly)) setSalaryTo(salaryTo.replace(salaryType.yearly, salaryType.hourly));\n        } else {\n         setYearly(true); \n         if (salaryFrom.includes(salaryType.hourly)) setSalaryFrom(salaryFrom.replace(salaryType.hourly, salaryType.yearly));\n         if (salaryTo.includes(salaryType.hourly)) setSalaryTo(salaryTo.replace(salaryType.hourly, salaryType.yearly));\n        }\n        salaryFormatter();\n     };\n\n     const salaryHandler = (e) => {\n        if (e.target.id === \"from\"){\n            const val = e.target.value.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n            setSalaryFrom(val);\n            \n        } else if (e.target.id === \"to\"){\n            const val = e.target.value.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n            setSalaryTo(val);\n        }\n        salaryFormatter();\n    };\n\n\n    const onBlurHandler = () => {\n        const fromInt = parseInt(salaryFrom);\n        const toInt = parseInt(salaryTo);\n        if (fromInt !== NaN && fromInt > 0 && (!salaryFrom.includes(salaryType.yearly)  && !salaryFrom.includes(salaryType.hourly))){\n            yearly ? setSalaryFrom(salaryFrom + salaryType.yearly) : setSalaryFrom(salaryFrom + salaryType.hourly);\n        }\n        if (toInt !== NaN && toInt > 0 && (!salaryTo.includes(salaryType.yearly) && !salaryTo.includes(salaryType.hourly))){\n            yearly ? setSalaryTo(salaryTo + salaryType.yearly) : setSalaryTo(salaryTo + salaryType.hourly)\n        } \n    };\n    \n    const onFocusHandler = (e) => {\n        if (e.target.id === \"from\"){\n            setSalaryFrom(salaryFrom.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))\n        } else {\n            setSalaryTo(salaryTo.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n        }\n    }; \n\n    const salaryFormatter = () => {\n        let fromSalary = salaryFrom.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        let toSalary = salaryTo.replace(/[^0-9]/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        if (yearly){\n            const i = fromSalary.indexOf(\",\");\n            const shortenedF =  fromSalary.slice(0, i) + \"k\";\n            const j = toSalary.indexOf(\",\");\n            const shortenedT = toSalary.slice(0, j) + \"k\";\n            const combined = shortenedF + \"-\" + shortenedT; \n            console.log(combined);\n            setSalaryRange({yearly: true, range: combined});\n\n        } else {\n            setSalaryRange({yearly: false, range: fromSalary +\"h\" + \"-\" + toSalary + \"h\"})\n        }\n    };\n\n \n    return (\n        <>\n           <label className=\"label\">Salary Range</label>\n            <div className=\"field\" onChange={salaryTypeHandler}>\n                <div className=\"control\">\n                <label className=\"radio\">\n                <input type=\"radio\" name=\"range\" value=\"hourly\"/>\n                Hourly\n            </label>\n            <label className=\"radio\">\n                <input type=\"radio\" name=\"range\" value=\"yearly\" defaultChecked/>\n                Yearly\n            </label>\n               </div>\n            </div>\n            {/*  */}\n            \n            <div className=\"field is-horizontal\">\n                <div className=\"field-body\">\n                    <div className=\"control\">\n                        <input className=\"input\"\n                         onBlur={onBlurHandler}  \n                         onFocus={onFocusHandler}\n                         placeholder=\"from\" id=\"from\" \n                         value={salaryFrom} onChange={salaryHandler}\n                         />\n                    </div>\n                    \n                    <div className=\"control\">\n                        <input className=\"input\" \n                         onBlur={onBlurHandler} \n                         onFocus={onFocusHandler}\n                         placeholder=\"Up to\" id=\"to\" \n                         value={salaryTo} onChange={salaryHandler} \n                         style={{ marginLeft: \"10px\"}}/>\n                    </div>\n                </div>\n                \n            </div>\n\n        </>\n    )\n};","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/ResponsiblityModal.js",["178","179"],"import React, { useState } from 'react';\nimport PreMadeRes from './preMadeJobRes'; \n\nexport default function ResponsibilityModal({allRessponsibilities ,ackRes}){\n    const [pmResps, setPmResps] = useState(allRessponsibilities);\n    const [preMadeMode, setPreMadeMode] = useState(false);\n    const [controllerModal, setControllerModal] = useState(false); \n    const [responsiblities, setResponsibilites] = useState([]);\n\n    const [customField, setCustomField] = useState(\"\"); \n    \n    return <div>\n        <button className=\"button is-rounded is-link\" onClick={()=>setControllerModal(true)}>Add Job Responsibilities</button>\n        <div className={controllerModal ? \"modal is-active\" : \"modal\"}>\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n                <p className=\"modal-card-title\">Job Responsibilities</p>\n                <button onClick={()=>setControllerModal(false)} className=\"delete\"></button>\n            </header>\n\n           <section className=\"modal-card-body\"> \n\n               <div className=\"notification is-link is-light has-text-centered\"> \n               For your convenience checkout our <u style={{cursor:\"pointer\"}} \n                onClick={()=>{\n                    setControllerModal(false); \n                    setPreMadeMode(true);\n                }}\n               >pre-made Templates</u> \n               </div>\n\n               <div className=\"box\">\n                    <div className=\"field\">\n                            <div className=\"control\">\n                                 <textarea className=\"textarea is-link has-fixed-size\" placeholder=\"Add Responsibility\" \n                                 value={customField} onChange={(e)=> setCustomField(e.target.value)}/>\n                             </div>\n                    </div>\n                    <div className=\"field is-grouped is-grouped-centered\">\n                            <div>\n                                <button className=\"button is-link is-light\" onClick={()=>{\n                                    if (customField.length > 2 && !responsiblities.includes(customField)) {\n                                        const newRes = [...responsiblities];\n                                        newRes.push(customField);\n                                        setResponsibilites(newRes);\n                                        ackRes(newRes);\n                                        setCustomField(\"\");\n                                    }\n                                }}>Add One</button>\n                            </div>\n                    </div>\n               </div>\n\n               {responsiblities.length ? <div className=\"box\">\n                <div className=\"content\">\n                    <h5 className=\"has-text-centered\">Job Responsibilities</h5>\n                <ul>\n                  {\n                      responsiblities.map(res => <li key={res}>{res} <i id={res} onClick={(e)=>{\n                        const newRes = [...responsiblities].filter(res => res !== e.target.id);\n                        setResponsibilites(newRes);\n                        ackRes(newRes);\n                        const preMadeResps = allRessponsibilities.map(({value})=> value);\n                        const id = e.target.id; \n                        if (preMadeResps.includes(id)){\n                            console.log(\"called\")\n                            const newPm = [...pmResps];\n                            const i = pmResps.findIndex(({value})=> value === id);\n                            console.log(i);\n                            newPm[i] = {value: pmResps[i].value, selected: false}\n                            console.log(pmResps);\n                            setPmResps(newPm);\n                        }            \n            \n                      }} className=\"far fa-times-circle is-clickable chc\" ></i> </li>)\n                  }\n                </ul>\n                </div>\n               </div> : null}\n            </section>\n            \n            <footer className=\"modal-card-foot\">\n                <div className=\"field is-grouped\">\n                \n                  <div className=\"control\">\n                  <button className=\"button is-link\" onClick={()=>{setControllerModal(!controllerModal)}}>Confirm</button>\n                  </div>\n                </div>\n            </footer>   \n               \n        </div>\n\n        </div>\n\n          <PreMadeRes \n           allRessponsibilities={allRessponsibilities} \n           preMadeResponsibilites={pmResps}\n           setpreMadeResponsibilites={setPmResps}\n           active={preMadeMode} goBack={setControllerModal} \n           setActive={setPreMadeMode} getResps={(resps)=>{\n            const formattedResps = resps.filter(({selected})=> selected).map(({value})=> value);\n            const newResps = [...responsiblities];\n            \n            formattedResps.forEach((resp)=> {\n                if (!newResps.includes(resp)){\n                    newResps.push(resp);\n                }\n            });\n            const preMadeResps = allRessponsibilities.map(({value})=> value);\n            setResponsibilites(newResps.filter((resp)=>{\n                if (preMadeResps.includes(resp) && !formattedResps.includes(resp)){\n                } else {\n                    return resp\n                };\n           \n            }));\n            ackRes(newResps.filter((resp)=>{\n                if (preMadeResps.includes(resp) && !formattedResps.includes(resp)){\n                } else {\n                    return resp\n                };\n           \n            }));\n           }}/>\n    </div>;\n}; \n\n\n","/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/Skills.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/RecruiterViewJobs/ViewPostings.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/allResponsibilities.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/newJob/preMadeJobRes.js",[],"/Users/sameem/Desktop/job-board-client/src/components/Account/subcomponents/useractions/resumeHelpers/sub/EmptyWarn.js",[],{"ruleId":"180","severity":1,"message":"181","line":47,"column":13,"nodeType":"182","endLine":47,"endColumn":31},{"ruleId":"180","severity":1,"message":"181","line":134,"column":17,"nodeType":"182","endLine":134,"endColumn":33},{"ruleId":"180","severity":1,"message":"181","line":150,"column":17,"nodeType":"182","endLine":150,"endColumn":34},{"ruleId":"180","severity":1,"message":"181","line":166,"column":17,"nodeType":"182","endLine":166,"endColumn":35},{"ruleId":"183","severity":1,"message":"184","line":7,"column":12,"nodeType":"185","messageId":"186","endLine":7,"endColumn":17},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":11,"column":96,"nodeType":"182","endLine":11,"endColumn":157},{"ruleId":"183","severity":1,"message":"193","line":25,"column":12,"nodeType":"185","messageId":"186","endLine":25,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":62,"column":65,"nodeType":"182","endLine":62,"endColumn":113},{"ruleId":"191","severity":1,"message":"192","line":65,"column":66,"nodeType":"182","endLine":65,"endColumn":114},{"ruleId":"183","severity":1,"message":"194","line":42,"column":11,"nodeType":"185","messageId":"186","endLine":42,"endColumn":24},{"ruleId":"195","severity":1,"message":"196","line":43,"column":13,"nodeType":"197","messageId":"198","endLine":43,"endColumn":28},{"ruleId":"195","severity":1,"message":"196","line":46,"column":13,"nodeType":"197","messageId":"198","endLine":46,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":72,"column":67,"nodeType":"197","messageId":"201","endLine":72,"endColumn":68},{"ruleId":"202","severity":1,"message":"203","line":111,"column":54,"nodeType":"204","messageId":"205","endLine":111,"endColumn":56},{"ruleId":"202","severity":1,"message":"203","line":118,"column":42,"nodeType":"204","messageId":"205","endLine":118,"endColumn":44},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["206"],"no-negated-in-lhs",["207"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'summary' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]